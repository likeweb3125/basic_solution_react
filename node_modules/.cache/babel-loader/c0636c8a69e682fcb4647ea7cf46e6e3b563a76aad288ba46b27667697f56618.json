{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/Pagination.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { pageNo, pageNoChange } from \"../../../store/etcSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = props => {\n  _s();\n  const dispatch = useDispatch();\n  const [pageList, setPageList] = useState([]);\n  useEffect(() => {\n    setPageList(pageList);\n  }, [pageList]);\n\n  //페이지리스트 배열로 저장\n  useEffect(() => {\n    let arr = [];\n    for (let i = props.startPage; i <= props.endPage; i++) {\n      arr.push(i);\n      setPageList(arr);\n    }\n  }, [props.currentPage]);\n\n  //페이징번호 클릭시 리스트리스트 변경하기\n  const movePage = num => {\n    dispatch(pageNo(num));\n    dispatch(pageNoChange(true));\n  };\n\n  //페이징 이전버튼 클릭시\n  const prevPaging = () => {\n    if (props.currentPage > 1) {\n      dispatch(pageNo(props.currentPage - 1));\n      dispatch(pageNoChange(true));\n    }\n  };\n\n  //페이징 다음버튼 클릭시\n  const nextPaging = () => {\n    if (props.currentPage < props.lastPage) {\n      dispatch(pageNo(props.currentPage + 1));\n      dispatch(pageNoChange(true));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paging\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn_prev btn_paging\",\n      onClick: prevPaging,\n      children: \"\\uC774\\uC804\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), props.endPage > 1 ? pageList && pageList.map((num, i) => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: props.currentPage === num ? \"on\" : \"\",\n        onClick: () => {\n          movePage(num);\n        },\n        children: num\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this);\n    }) : props.endPage === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"on\",\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn_next btn_paging\",\n      onClick: nextPaging,\n      children: \"\\uB2E4\\uC74C\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Pagination, \"CIlNzceZaqYhqVD/4f3S9S7JCVg=\", false, function () {\n  return [useDispatch];\n});\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["useEffect","useState","useDispatch","pageNo","pageNoChange","jsxDEV","_jsxDEV","Pagination","props","_s","dispatch","pageList","setPageList","arr","i","startPage","endPage","push","currentPage","movePage","num","prevPaging","nextPaging","lastPage","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/Pagination.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { pageNo, pageNoChange } from \"../../../store/etcSlice\";\n\nconst Pagination = (props) => {\n    const dispatch = useDispatch();\n    const [pageList, setPageList] = useState([]);\n\n    useEffect(()=>{\n        setPageList(pageList);\n    },[pageList]);\n\n    //페이지리스트 배열로 저장\n    useEffect(()=>{\n        let arr = [];\n        for (let i = props.startPage; i <= props.endPage; i++) {\n            arr.push(i);\n            setPageList(arr);\n        }\n    },[props.currentPage]);\n    \n    //페이징번호 클릭시 리스트리스트 변경하기\n    const movePage = (num) => {\n        dispatch(pageNo(num));\n        dispatch(pageNoChange(true));\n    };\n\n    //페이징 이전버튼 클릭시\n    const prevPaging = () => {\n        if(props.currentPage > 1){\n            dispatch(pageNo(props.currentPage - 1));\n            dispatch(pageNoChange(true));\n        }\n    };\n\n    //페이징 다음버튼 클릭시\n    const nextPaging = () => {\n        if(props.currentPage < props.lastPage){\n            dispatch(pageNo(props.currentPage + 1));\n            dispatch(pageNoChange(true));\n        }\n    };\n\n    return(\n        <div className=\"paging\">\n            <button type='button' className=\"btn_prev btn_paging\" onClick={prevPaging}>이전페이지</button>\n            {props.endPage > 1 ?\n                pageList && pageList.map((num,i)=>{\n                    return(\n                        <button type=\"button\" key={i} \n                            className={props.currentPage === num ? \"on\" : \"\"}\n                            onClick={()=>{movePage(num)}}\n                        >{num}</button>\n                    );\n                })\n                :props.endPage === 1 && <button type=\"button\" className=\"on\">1</button>\n            }\n            <button type='button' className=\"btn_next btn_paging\" onClick={nextPaging}>다음페이지</button>\n        </div>\n    );\n};\n\nexport default Pagination;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,EAAEC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAI;IACVY,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC,EAAC,CAACA,QAAQ,CAAC,CAAC;;EAEb;EACAX,SAAS,CAAC,MAAI;IACV,IAAIa,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAGN,KAAK,CAACO,SAAS,EAAED,CAAC,IAAIN,KAAK,CAACQ,OAAO,EAAEF,CAAC,EAAE,EAAE;MACnDD,GAAG,CAACI,IAAI,CAACH,CAAC,CAAC;MACXF,WAAW,CAACC,GAAG,CAAC;IACpB;EACJ,CAAC,EAAC,CAACL,KAAK,CAACU,WAAW,CAAC,CAAC;;EAEtB;EACA,MAAMC,QAAQ,GAAIC,GAAG,IAAK;IACtBV,QAAQ,CAACP,MAAM,CAACiB,GAAG,CAAC,CAAC;IACrBV,QAAQ,CAACN,YAAY,CAAC,IAAI,CAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAGb,KAAK,CAACU,WAAW,GAAG,CAAC,EAAC;MACrBR,QAAQ,CAACP,MAAM,CAACK,KAAK,CAACU,WAAW,GAAG,CAAC,CAAC,CAAC;MACvCR,QAAQ,CAACN,YAAY,CAAC,IAAI,CAAC,CAAC;IAChC;EACJ,CAAC;;EAED;EACA,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAGd,KAAK,CAACU,WAAW,GAAGV,KAAK,CAACe,QAAQ,EAAC;MAClCb,QAAQ,CAACP,MAAM,CAACK,KAAK,CAACU,WAAW,GAAG,CAAC,CAAC,CAAC;MACvCR,QAAQ,CAACN,YAAY,CAAC,IAAI,CAAC,CAAC;IAChC;EACJ,CAAC;EAED,oBACIE,OAAA;IAAKkB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBnB,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,qBAAqB;MAACG,OAAO,EAAEN,UAAW;MAAAI,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxFvB,KAAK,CAACQ,OAAO,GAAG,CAAC,GACdL,QAAQ,IAAIA,QAAQ,CAACqB,GAAG,CAAC,CAACZ,GAAG,EAACN,CAAC,KAAG;MAC9B,oBACIR,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QACjBF,SAAS,EAAEhB,KAAK,CAACU,WAAW,KAAKE,GAAG,GAAG,IAAI,GAAG,EAAG;QACjDO,OAAO,EAAEA,CAAA,KAAI;UAACR,QAAQ,CAACC,GAAG,CAAC;QAAA,CAAE;QAAAK,QAAA,EAC/BL;MAAG,GAHsBN,CAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CAAC;IAEvB,CAAC,CAAC,GACDvB,KAAK,CAACQ,OAAO,KAAK,CAAC,iBAAIV,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,IAAI;MAAAC,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3EzB,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,qBAAqB;MAACG,OAAO,EAAEL,UAAW;MAAAG,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEd,CAAC;AAACtB,EAAA,CAxDIF,UAAU;EAAA,QACKL,WAAW;AAAA;AAAA+B,EAAA,GAD1B1B,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}