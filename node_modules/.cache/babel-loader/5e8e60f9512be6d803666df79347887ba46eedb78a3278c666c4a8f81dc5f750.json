{"ast":null,"code":"var _jsxFileName = \"/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Board.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport { enum_api_uri } from \"../../config/enum\";\nimport * as CF from \"../../config/function\";\nimport { currentPage } from \"../../store/commonSlice\";\nimport { confirmPop } from \"../../store/popupSlice\";\nimport { pageNo, pageNoChange, checkedList } from \"../../store/etcSlice\";\nimport SelectBox from \"../../components/component/admin/SelectBox\";\nimport SearchInput from \"../../components/component/admin/SearchInput\";\nimport TableWrap from \"../../components/component/admin/TableWrap\";\nimport ConfirmPop from \"../../components/popup/ConfirmPop\";\nimport Pagination from \"../../components/component/admin/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = props => {\n  _s();\n  const dispatch = useDispatch();\n  const board_list = enum_api_uri.board_list;\n  const notice_setting = enum_api_uri.notice_setting;\n  const common = useSelector(state => state.common);\n  const popup = useSelector(state => state.popup);\n  const user = useSelector(state => state.user);\n  const etc = useSelector(state => state.etc);\n  const [confirm, setConfirm] = useState(false);\n  const [notiSettingConfirm, setNotiSettingConfirm] = useState(false);\n  const [boardTit, setBoardTit] = useState(\"\");\n  const [searchTxt, setSearchTxt] = useState(\"\");\n  const [category, setCategory] = useState(null);\n  const [boardData, setBoardData] = useState({});\n  const [limit, setLimit] = useState(10);\n  const [searchType, setSearchType] = useState(\"제목만\");\n  const [moveSelect, setMoveSelect] = useState(\"\");\n  const [notiSetData, setNotiSetData] = useState({});\n  const [checkList, setCheckList] = useState([]);\n  const [checkedNum, setCheckedNum] = useState(0);\n\n  // Confirm팝업 닫힐때\n  useEffect(() => {\n    if (popup.confirmPop === false) {\n      setConfirm(false);\n      setNotiSettingConfirm(false);\n    }\n  }, [popup.confirmPop]);\n\n  //페이지 제목 가져오기\n  useEffect(() => {\n    setBoardTit(props.tit);\n\n    //게시판 바뀔때마다 현재게시판 category번호 가져오기\n    if (props.tit) {\n      const idx = common.boardMenu.findIndex(item => item.c_name === props.tit);\n      const num = common.boardMenu[idx].category;\n      setCategory(num);\n    }\n  }, [props.tit]);\n\n  //게시판정보 가져오기\n  const getBoardData = page => {\n    let search;\n    if (searchType == \"제목만\") {\n      search = \"title\";\n    } else if (searchType == \"제목 + 내용\") {\n      search = \"titlecontents\";\n    } else if (searchType == \"작성자\") {\n      search = \"name\";\n    }\n    axios.get(`${board_list.replace(\":category\", category).replace(\":limit\", limit)}?page=${page ? page : 1}&search=${search}${searchTxt.length > 0 ? \"&searchtxt=\" + searchTxt : \"\"}`, {\n      headers: {\n        Authorization: `Bearer ${user.loginUser.accessToken}`\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        let data = res.data.data;\n        setBoardData(data);\n      }\n    }).catch(error => {\n      const err_msg = CF.errorMsgHandler(error);\n      dispatch(confirmPop({\n        confirmPop: true,\n        confirmPopTit: '알림',\n        confirmPopTxt: err_msg,\n        confirmPopBtn: 1\n      }));\n      setConfirm(true);\n    });\n  };\n\n  //제목 셀렉트박스 변경시, limit 값 변경시 게시판정보 가져오기\n  useEffect(() => {\n    if (category != null) {\n      getBoardData();\n    }\n  }, [category, limit]);\n\n  //제목 셀렉트박스 변경시 페이지변경\n  const titSelectChangeHandler = e => {\n    const val = e.currentTarget.value;\n    setBoardTit(val);\n    let idx = common.boardMenu.findIndex(item => item.c_name === val);\n    idx = idx + 1;\n    dispatch(currentPage(`board1_${idx}`));\n  };\n\n  //페이지네이션 클릭으로 페이지변경시\n  useEffect(() => {\n    if (etc.pageNoChange) {\n      getBoardData(etc.pageNo);\n      dispatch(pageNoChange(false));\n    }\n  }, [etc.pageNo, etc.pageNoChange]);\n\n  //공지설정 or 해제하기버튼 클릭시\n  const notiSettingBtnClickHandler = data => {\n    setNotiSetData(data);\n    const notice = data.b_notice;\n    let txt;\n    if (notice == \"1\") {\n      txt = '해제';\n    } else {\n      txt = '설정';\n    }\n    dispatch(confirmPop({\n      confirmPop: true,\n      confirmPopTit: '알림',\n      confirmPopTxt: '해당 게시글을 공지 ' + txt + '하시겠습니까?',\n      confirmPopBtn: 2\n    }));\n    setNotiSettingConfirm(true);\n  };\n\n  //공지설정 or 해제하기\n  const notiSettingHandler = () => {\n    let set;\n    if (notiSetData.b_notice == \"1\") {\n      set = \"0\";\n    } else {\n      set = \"1\";\n    }\n    const body = {\n      notice: set,\n      // 1 설정 , 0 해제\n      idx: notiSetData.idx,\n      category: notiSetData.category\n    };\n    axios.put(`${notice_setting}`, body, {\n      headers: {\n        Authorization: `Bearer ${user.loginUser.accessToken}`\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        //현재페이지 게시판정보 가져오기 \n        getBoardData(etc.pageNo);\n      }\n    }).catch(error => {\n      const err_msg = CF.errorMsgHandler(error);\n      dispatch(confirmPop({\n        confirmPop: true,\n        confirmPopTit: '알림',\n        confirmPopTxt: err_msg,\n        confirmPopBtn: 1\n      }));\n      setConfirm(true);\n    });\n  };\n\n  //맨처음 리스트 idx값만 배열로 (전체 체크박스리스트 만들기)\n  useEffect(() => {\n    if (boardData.hasOwnProperty(\"board_list\")) {\n      const list = boardData.board_list.map(item => item.idx).filter(Boolean);\n      setCheckList([...list]);\n    }\n  }, [boardData]);\n\n  //전체선택 체크박스 체크시\n  const allCheckHandler = checked => {\n    if (checked) {\n      dispatch(checkedList([...checkList]));\n    } else {\n      dispatch(checkedList([]));\n    }\n  };\n\n  //체크박스 변경시 체크된 수 변경\n  useEffect(() => {\n    const num = etc.checkedList.length;\n    setCheckedNum(num);\n  }, [etc.checkedList]);\n\n  //게시글 이동버튼 클릭시\n  const moveBtnClickHandler = () => {\n    if (checkedNum > 0) {\n      dispatch(confirmPop({\n        confirmPop: true,\n        confirmPopTit: '알림',\n        confirmPopTxt: '해당 게시글을' + moveSelect + \"로 이동하시겠습니까?\",\n        confirmPopBtn: 2\n      }));\n      setConfirm(true);\n    } else {\n      dispatch(confirmPop({\n        confirmPop: true,\n        confirmPopTit: '알림',\n        confirmPopTxt: '게시글을 선택해주세요.',\n        confirmPopBtn: 1\n      }));\n      setConfirm(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page_admin_board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tit\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: boardTit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SelectBox, {\n              class: \"tit_select\",\n              list: common.boardMenu,\n              selected: boardTit,\n              onChangeHandler: e => {\n                titSelectChangeHandler(e);\n              },\n              selHidden: true,\n              objectSel: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uCD1D 20\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_search_wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(SelectBox, {\n                class: \"select_type3 search_row_select\",\n                list: [10, 15, 30, 50],\n                selected: limit,\n                onChangeHandler: e => {\n                  const val = e.currentTarget.value;\n                  setLimit(val);\n                },\n                selHidden: true,\n                limitSel: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search_box\",\n                children: [/*#__PURE__*/_jsxDEV(SelectBox, {\n                  class: \"select_type3\",\n                  list: [\"제목만\", \"제목 + 내용\", \"작성자\"],\n                  selected: searchType,\n                  onChangeHandler: e => {\n                    const val = e.currentTarget.value;\n                    setSearchType(val);\n                  },\n                  selHidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n                  placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n                  onChangeHandler: e => {\n                    const val = e.currentTarget.value;\n                    setSearchTxt(val);\n                  },\n                  value: searchTxt,\n                  onSearchHandler: getBoardData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board_table_util\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chk_area\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chk_box2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"chkAll\",\n                  className: \"blind\",\n                  onChange: e => {\n                    allCheckHandler(e.currentTarget.checked);\n                  },\n                  checked: checkList.length > 0 && checkList.length === etc.checkedList.length && checkList.every(item => etc.checkedList.includes(item))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"chkAll\",\n                  children: \"\\uC804\\uCCB4\\uC120\\uD0DD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"util_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uC120\\uD0DD\\uD55C \\uAC8C\\uC2DC\\uAE00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uCD1D \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: CF.MakeIntComma(checkedNum)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this), \"\\uAC1C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(SelectBox, {\n                class: \"select_type3\",\n                list: boardData.board_Name,\n                selected: moveSelect,\n                onChangeHandler: e => {\n                  const val = e.currentTarget.value;\n                  setMoveSelect(val);\n                },\n                selHidden: true,\n                objectSel: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"(\\uC73C)\\uB85C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn_type8\",\n                onClick: moveBtnClickHandler,\n                children: \"\\uC774\\uB3D9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"\\u203B \\uAC8C\\uC2DC\\uD310 \\uC720\\uD615\\uC774 \\uB3D9\\uC77C\\uD560 \\uC2DC\\uC5D0\\uB9CC \\uAC8C\\uC2DC\\uAE00 \\uC774\\uB3D9\\uC774 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"util_right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn_type9\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableWrap, {\n            class: \"tbl_wrap1\",\n            colgroup: [\"80px\", \"10%\", \"auto\", \"12%\", \"9%\", \"13%\", \"13%\"],\n            thList: [\"\", \"번호\", \"제목\", \"게시판 유형\", \"작성자\", \"작성일시\", \"공지 설정\"],\n            tdList: boardData.board_list,\n            type: \"board\",\n            onNotiSettingHandler: notiSettingBtnClickHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this), boardData.board_list && boardData.board_list.length > 0 && /*#__PURE__*/_jsxDEV(Pagination, {\n            currentPage: boardData.current_page //현재페이지 번호\n            ,\n            startPage: boardData.start_page //시작페이지 번호 \n            ,\n            endPage: boardData.end_page //보이는 끝페이지 번호 \n            ,\n            lastPage: boardData.last_page //총페이지 끝\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board_btn_wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"btn_type4\",\n              children: \"\\uC791\\uC131\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), notiSettingConfirm && /*#__PURE__*/_jsxDEV(ConfirmPop, {\n      onClickHandler: notiSettingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 32\n    }, this), confirm && /*#__PURE__*/_jsxDEV(ConfirmPop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Board, \"wN64S1ZAPOuqkEth6hjBkNZMYGE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","Formik","axios","enum_api_uri","CF","currentPage","confirmPop","pageNo","pageNoChange","checkedList","SelectBox","SearchInput","TableWrap","ConfirmPop","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","props","_s","dispatch","board_list","notice_setting","common","state","popup","user","etc","confirm","setConfirm","notiSettingConfirm","setNotiSettingConfirm","boardTit","setBoardTit","searchTxt","setSearchTxt","category","setCategory","boardData","setBoardData","limit","setLimit","searchType","setSearchType","moveSelect","setMoveSelect","notiSetData","setNotiSetData","checkList","setCheckList","checkedNum","setCheckedNum","tit","idx","boardMenu","findIndex","item","c_name","num","getBoardData","page","search","get","replace","length","headers","Authorization","loginUser","accessToken","then","res","status","data","catch","error","err_msg","errorMsgHandler","confirmPopTit","confirmPopTxt","confirmPopBtn","titSelectChangeHandler","e","val","currentTarget","value","notiSettingBtnClickHandler","notice","b_notice","txt","notiSettingHandler","set","body","put","hasOwnProperty","list","map","filter","Boolean","allCheckHandler","checked","moveBtnClickHandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","selected","onChangeHandler","selHidden","objectSel","limitSel","placeholder","onSearchHandler","type","id","onChange","every","includes","htmlFor","MakeIntComma","board_Name","onClick","colgroup","thList","tdList","onNotiSettingHandler","current_page","startPage","start_page","endPage","end_page","lastPage","last_page","href","onClickHandler","_c","$RefreshReg$"],"sources":["/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Board.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\nimport { enum_api_uri } from \"../../config/enum\";\nimport * as CF from \"../../config/function\";\nimport { currentPage } from \"../../store/commonSlice\";\nimport { confirmPop } from \"../../store/popupSlice\";\nimport { pageNo, pageNoChange, checkedList } from \"../../store/etcSlice\";\nimport SelectBox from \"../../components/component/admin/SelectBox\";\nimport SearchInput from \"../../components/component/admin/SearchInput\";\nimport TableWrap from \"../../components/component/admin/TableWrap\";\nimport ConfirmPop from \"../../components/popup/ConfirmPop\";\nimport Pagination from \"../../components/component/admin/Pagination\";\n\n\nconst Board = (props) => {\n    const dispatch = useDispatch();\n    const board_list = enum_api_uri.board_list;\n    const notice_setting = enum_api_uri.notice_setting;\n    const common = useSelector((state)=>state.common);\n    const popup = useSelector((state)=>state.popup);\n    const user = useSelector((state)=>state.user);\n    const etc = useSelector((state)=>state.etc);\n    const [confirm, setConfirm] = useState(false);\n    const [notiSettingConfirm, setNotiSettingConfirm] = useState(false);\n    const [boardTit, setBoardTit] = useState(\"\");\n    const [searchTxt, setSearchTxt] = useState(\"\");\n    const [category, setCategory] = useState(null);\n    const [boardData, setBoardData] = useState({});\n    const [limit, setLimit] = useState(10);\n    const [searchType, setSearchType] = useState(\"제목만\");\n    const [moveSelect, setMoveSelect] = useState(\"\");\n    const [notiSetData, setNotiSetData] = useState({});\n    const [checkList, setCheckList] = useState([]);\n    const [checkedNum, setCheckedNum] = useState(0);\n\n\n    // Confirm팝업 닫힐때\n    useEffect(()=>{\n        if(popup.confirmPop === false){\n            setConfirm(false);\n            setNotiSettingConfirm(false);\n        }\n    },[popup.confirmPop]);\n\n\n    //페이지 제목 가져오기\n    useEffect(()=>{\n        setBoardTit(props.tit);\n\n        //게시판 바뀔때마다 현재게시판 category번호 가져오기\n        if(props.tit){\n            const idx = common.boardMenu.findIndex((item)=>item.c_name === props.tit);\n            const num = common.boardMenu[idx].category\n            setCategory(num);\n        }\n    },[props.tit]);\n\n\n    //게시판정보 가져오기\n    const getBoardData = (page) => {\n        let search;\n        if(searchType == \"제목만\"){\n            search = \"title\";\n        }else if(searchType == \"제목 + 내용\"){\n            search = \"titlecontents\";\n        }else if(searchType == \"작성자\"){\n            search = \"name\";\n        } \n\n        axios.get(`${board_list.replace(\":category\",category).replace(\":limit\",limit)}?page=${page ? page : 1}&search=${search}${searchTxt.length > 0 ? \"&searchtxt=\"+searchTxt : \"\"}`,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                let data = res.data.data;\n                setBoardData(data);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n    \n    //제목 셀렉트박스 변경시, limit 값 변경시 게시판정보 가져오기\n    useEffect(()=>{\n        if(category != null){\n            getBoardData();\n        }\n    },[category,limit]);\n\n\n    //제목 셀렉트박스 변경시 페이지변경\n    const titSelectChangeHandler = (e) => {\n        const val = e.currentTarget.value;\n        setBoardTit(val);\n\n        let idx = common.boardMenu.findIndex((item) => item.c_name === val);\n            idx = idx + 1;\n        dispatch(currentPage(`board1_${idx}`));\n    };\n\n\n    //페이지네이션 클릭으로 페이지변경시\n    useEffect(()=>{\n        if(etc.pageNoChange){\n            getBoardData(etc.pageNo);\n\n            dispatch(pageNoChange(false));\n        }\n    },[etc.pageNo,etc.pageNoChange]);\n\n\n\n    //공지설정 or 해제하기버튼 클릭시\n    const notiSettingBtnClickHandler = (data) => {\n        setNotiSetData(data);\n        const notice = data.b_notice;\n        let txt;\n        if(notice == \"1\"){\n            txt = '해제';\n        }else{\n            txt = '설정';\n        }\n        dispatch(confirmPop({\n            confirmPop:true,\n            confirmPopTit:'알림',\n            confirmPopTxt:'해당 게시글을 공지 '+txt+'하시겠습니까?',\n            confirmPopBtn:2,\n        }));\n        setNotiSettingConfirm(true);\n    };\n\n\n    //공지설정 or 해제하기\n    const notiSettingHandler = () => {\n        let set;\n        if(notiSetData.b_notice == \"1\"){\n            set = \"0\";\n        }else{\n            set = \"1\";\n        }\n\n        const body = {\n            notice: set, // 1 설정 , 0 해제\n            idx: notiSetData.idx,\n            category: notiSetData.category\n        };\n        axios.put(`${notice_setting}`, body,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                //현재페이지 게시판정보 가져오기 \n                getBoardData(etc.pageNo);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n\n    //맨처음 리스트 idx값만 배열로 (전체 체크박스리스트 만들기)\n    useEffect(()=>{\n        if(boardData.hasOwnProperty(\"board_list\")){\n            const list = boardData.board_list.map((item) => item.idx).filter(Boolean);\n            setCheckList([...list]);\n        }\n    },[boardData]);\n\n\n    //전체선택 체크박스 체크시\n    const allCheckHandler = (checked) => {\n        if(checked){\n            dispatch(checkedList([...checkList]));\n        }else{\n            dispatch(checkedList([]));\n        }\n    };\n\n\n    //체크박스 변경시 체크된 수 변경\n    useEffect(()=>{\n        const num = etc.checkedList.length;\n        setCheckedNum(num);\n    },[etc.checkedList]);\n    \n\n    //게시글 이동버튼 클릭시\n    const moveBtnClickHandler = () => {\n        if(checkedNum > 0){\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt:'해당 게시글을'+moveSelect+\"로 이동하시겠습니까?\",\n                confirmPopBtn:2,\n            }));\n            setConfirm(true);\n        }else{\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt:'게시글을 선택해주세요.',\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        }\n    };\n\n\n    return(<>\n        <div className=\"page_admin_board\">\n            <div className=\"content_box\">\n                <div className=\"tit\">\n                    <h3>\n                        <b>{boardTit}</b>\n                        <SelectBox \n                            class=\"tit_select\"\n                            list={common.boardMenu}\n                            selected={boardTit}\n                            onChangeHandler={(e)=>{\n                                titSelectChangeHandler(e);\n                            }}\n                            selHidden={true}\n                            objectSel={true}\n                        />\n                    </h3>\n                    <strong>총 20개</strong>\n                </div>\n                <div className=\"board_section\">\n                    <div className=\"form_search_wrap\">\n                        <div className=\"search_wrap\">\n                            <SelectBox \n                                class=\"select_type3 search_row_select\"\n                                list={[10,15,30,50]}\n                                selected={limit}\n                                onChangeHandler={(e)=>{\n                                    const val = e.currentTarget.value;\n                                    setLimit(val);\n                                }}\n                                selHidden={true}\n                                limitSel={true}\n                            />\n                            <div className=\"search_box\">\n                                <SelectBox \n                                    class=\"select_type3\"\n                                    list={[\"제목만\",\"제목 + 내용\",\"작성자\"]}\n                                    selected={searchType}\n                                    onChangeHandler={(e)=>{\n                                        const val = e.currentTarget.value;\n                                        setSearchType(val);\n                                    }}\n                                    selHidden={true}\n                                />\n                                <SearchInput \n                                    placeholder=\"검색어를 입력해주세요.\"\n                                    onChangeHandler={(e)=>{\n                                        const val = e.currentTarget.value;\n                                        setSearchTxt(val);\n                                    }}\n                                    value={searchTxt}\n                                    onSearchHandler={getBoardData}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"board_table_util\">\n                        <div className=\"chk_area\">\n                            <div className=\"chk_box2\">\n                                <input type=\"checkbox\" id=\"chkAll\" className=\"blind\"\n                                    onChange={(e)=>{allCheckHandler(e.currentTarget.checked)}} \n                                    checked={checkList.length > 0 && checkList.length === etc.checkedList.length && checkList.every(item => etc.checkedList.includes(item))}\n                                />\n                                <label htmlFor=\"chkAll\">전체선택</label>\n                            </div>\n                        </div>\n                        <div className=\"util_wrap\">\n                            <span>선택한 게시글</span>\n                            <span>총 <b>{CF.MakeIntComma(checkedNum)}</b>개</span>\n                            <SelectBox \n                                class=\"select_type3\"\n                                list={boardData.board_Name}\n                                selected={moveSelect}\n                                onChangeHandler={(e)=>{\n                                    const val = e.currentTarget.value;\n                                    setMoveSelect(val);\n                                }}\n                                selHidden={true}\n                                objectSel={true}\n                            />\n                            <span>(으)로</span>\n                            <button type=\"button\" className=\"btn_type8\" onClick={moveBtnClickHandler}>이동</button>\n                            <em>※ 게시판 유형이 동일할 시에만 게시글 이동이 가능합니다.</em>\n                        </div>\n                        <div className=\"util_right\">\n                            <button type=\"button\" className=\"btn_type9\">삭제</button>\n                        </div>\n                    </div>\n                    <TableWrap \n                        class=\"tbl_wrap1\"\n                        colgroup={[\"80px\",\"10%\",\"auto\",\"12%\",\"9%\",\"13%\",\"13%\"]}\n                        thList={[\"\",\"번호\",\"제목\",\"게시판 유형\",\"작성자\",\"작성일시\",\"공지 설정\"]}\n                        tdList={boardData.board_list}\n                        type={\"board\"}\n                        onNotiSettingHandler={notiSettingBtnClickHandler}\n                    />\n                    {boardData.board_list && boardData.board_list.length > 0 &&\n                        <Pagination \n                            currentPage={boardData.current_page} //현재페이지 번호\n                            startPage={boardData.start_page} //시작페이지 번호 \n                            endPage={boardData.end_page} //보이는 끝페이지 번호 \n                            lastPage={boardData.last_page} //총페이지 끝\n                        />\n                    }\n                    <div className=\"board_btn_wrap\">\n                        <a href=\"#\" className=\"btn_type4\">작성하기</a>                                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n        {/* 게시글 공지설정 or 해제 confirm팝업 */}\n        {notiSettingConfirm && <ConfirmPop onClickHandler={notiSettingHandler} />}\n\n        {/* confirm팝업 */}\n        {confirm && <ConfirmPop />}\n    </>);\n};\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}