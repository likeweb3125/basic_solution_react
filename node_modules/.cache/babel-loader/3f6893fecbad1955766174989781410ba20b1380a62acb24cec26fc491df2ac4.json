{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport user from './userSlice';\nimport common from './commonSlice';\nimport popup from './popupSlice';\nimport etc from './etcSlice';\nconst reducers = combineReducers({\n  user: user.reducer,\n  common: common.reducer,\n  popup: popup.reducer,\n  etc: etc.reducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage: sessionStorage,\n  whitelist: ['user', 'common']\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","storage","combineReducers","persistReducer","sessionStorage","user","common","popup","etc","reducers","reducer","persistConfig","key","whitelist","persistedReducer","store","middleware","serializableCheck"],"sources":["/Users/sol/Documents/GitHub/basic_solution_react/src/store/store.js"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport sessionStorage from 'redux-persist/es/storage/session';\nimport user from './userSlice';\nimport common from './commonSlice';\nimport popup from './popupSlice';\nimport etc from './etcSlice';\n\nconst reducers = combineReducers({\n  user: user.reducer,\n  common: common.reducer,\n  popup: popup.reducer,\n  etc: etc.reducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: sessionStorage,\n  whitelist: ['user','common']\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n});\n\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,GAAG,MAAM,YAAY;AAE5B,MAAMC,QAAQ,GAAGP,eAAe,CAAC;EAC/BG,IAAI,EAAEA,IAAI,CAACK,OAAO;EAClBJ,MAAM,EAAEA,MAAM,CAACI,OAAO;EACtBH,KAAK,EAAEA,KAAK,CAACG,OAAO;EACpBF,GAAG,EAAEA,GAAG,CAACE;AACX,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXX,OAAO,EAAEG,cAAc;EACvBS,SAAS,EAAE,CAAC,MAAM,EAAC,QAAQ;AAC7B,CAAC;AAED,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAa,EAAEF,QAAQ,CAAC;AAEhE,MAAMM,KAAK,GAAGhB,cAAc,CAAC;EAC3BW,OAAO,EAAEI,gBAAgB;EACzBE,UAAU,EAAEhB,oBAAoB,CAAC;IAC/BiB,iBAAiB,EAAE;EACrB,CAAC;AACH,CAAC,CAAC;AAEF,eAAeF,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}