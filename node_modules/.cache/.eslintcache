[{"/Users/sol/Documents/GitHub/basic_solution_react/src/index.js":"1","/Users/sol/Documents/GitHub/basic_solution_react/src/App.js":"2","/Users/sol/Documents/GitHub/basic_solution_react/src/reportWebVitals.js":"3","/Users/sol/Documents/GitHub/basic_solution_react/src/store/store.js":"4","/Users/sol/Documents/GitHub/basic_solution_react/src/store/commonSlice.js":"5","/Users/sol/Documents/GitHub/basic_solution_react/src/store/popupSlice.js":"6","/Users/sol/Documents/GitHub/basic_solution_react/src/store/userSlice.js":"7","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Login.js":"8","/Users/sol/Documents/GitHub/basic_solution_react/src/components/popup/Popup.js":"9","/Users/sol/Documents/GitHub/basic_solution_react/src/components/layout/admin/Layout.js":"10","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Main.js":"11","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Board.js":"12","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/MenuCategory.js":"13","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/SettingPolicy.js":"14","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/SettingSiteInfo.js":"15","/Users/sol/Documents/GitHub/basic_solution_react/src/components/layout/admin/Footer.js":"16","/Users/sol/Documents/GitHub/basic_solution_react/src/components/layout/admin/Header.js":"17","/Users/sol/Documents/GitHub/basic_solution_react/src/components/popup/admin/NotiPop.js":"18","/Users/sol/Documents/GitHub/basic_solution_react/src/components/popup/ConfirmPop.js":"19","/Users/sol/Documents/GitHub/basic_solution_react/src/config/enum.js":"20","/Users/sol/Documents/GitHub/basic_solution_react/src/config/function.js":"21","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/SelectBox.js":"22","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/MenuListBox.js":"23","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/SearchInput.js":"24","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/InputBox.js":"25","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/TableWrap.js":"26","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/MenuDepth1.js":"27","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/UnusedMenu.js":"28","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/MenuDepth2.js":"29","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/Pagination.js":"30","/Users/sol/Documents/GitHub/basic_solution_react/src/store/etcSlice.js":"31"},{"size":962,"mtime":1696384739834,"results":"32","hashOfConfig":"33"},{"size":945,"mtime":1696568653843,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1696382535634,"results":"35","hashOfConfig":"33"},{"size":877,"mtime":1698219377548,"results":"36","hashOfConfig":"33"},{"size":502,"mtime":1698223655095,"results":"37","hashOfConfig":"33"},{"size":886,"mtime":1696390280819,"results":"38","hashOfConfig":"33"},{"size":465,"mtime":1698131327648,"results":"39","hashOfConfig":"33"},{"size":6329,"mtime":1698201763509,"results":"40","hashOfConfig":"33"},{"size":386,"mtime":1696385691833,"results":"41","hashOfConfig":"33"},{"size":4898,"mtime":1698132239558,"results":"42","hashOfConfig":"33"},{"size":8757,"mtime":1698131380685,"results":"43","hashOfConfig":"33"},{"size":14888,"mtime":1698226205100,"results":"44","hashOfConfig":"33"},{"size":13762,"mtime":1697079755303,"results":"45","hashOfConfig":"33"},{"size":10835,"mtime":1698031507156,"results":"46","hashOfConfig":"33"},{"size":16542,"mtime":1698131380684,"results":"47","hashOfConfig":"33"},{"size":1353,"mtime":1696387839758,"results":"48","hashOfConfig":"33"},{"size":14152,"mtime":1698226677204,"results":"49","hashOfConfig":"33"},{"size":7059,"mtime":1698212097427,"results":"50","hashOfConfig":"33"},{"size":2496,"mtime":1698117263505,"results":"51","hashOfConfig":"33"},{"size":1043,"mtime":1698225247395,"results":"52","hashOfConfig":"33"},{"size":1542,"mtime":1689664405699,"results":"53","hashOfConfig":"33"},{"size":936,"mtime":1698216624386,"results":"54","hashOfConfig":"33"},{"size":7389,"mtime":1697080239528,"results":"55","hashOfConfig":"33"},{"size":764,"mtime":1698221975139,"results":"56","hashOfConfig":"33"},{"size":585,"mtime":1698123878346,"results":"57","hashOfConfig":"33"},{"size":6946,"mtime":1698222248008,"results":"58","hashOfConfig":"33"},{"size":7567,"mtime":1697079782493,"results":"59","hashOfConfig":"33"},{"size":2782,"mtime":1697077392604,"results":"60","hashOfConfig":"33"},{"size":3110,"mtime":1697079269086,"results":"61","hashOfConfig":"33"},{"size":2021,"mtime":1698223675821,"results":"62","hashOfConfig":"33"},{"size":625,"mtime":1698223659751,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"2ho0e6",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"67"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"67"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"67"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"67"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"67"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sol/Documents/GitHub/basic_solution_react/src/index.js",[],[],["171"],"/Users/sol/Documents/GitHub/basic_solution_react/src/App.js",["172","173"],[],"import { Routes, Route, Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Popup from './components/popup/Popup';\nimport AdminLogin from './pages/admin/Login';\nimport AdminLayout from './components/layout/admin/Layout';\n\nimport './css/default.css';\n\n\nfunction App() {\n    const user = useSelector((state)=>state.user);\n\n    return(\n        <div>\n            <Routes>\n\n                {/* 관리자단---------------------------------------------- */}\n                {/* 로그인 */}\n                <Route path=\"/console/login\" element={<AdminLogin />} />\n\n                {/* 모든페이지 */}\n                <Route path=\"/console\" element={<AdminLayout />} />\n\n\n                    \n                {/* //관리자단---------------------------------------------- */}\n\n\n                \n\n            </Routes>\n\n            {/* 팝업 */}\n            <Popup />\n        </div>\n    );\n}\n\nexport default App;\n","/Users/sol/Documents/GitHub/basic_solution_react/src/reportWebVitals.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/store/store.js",["174"],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/store/commonSlice.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/store/popupSlice.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/store/userSlice.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Login.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/popup/Popup.js",["175"],[],"import { useSelector } from \"react-redux\";\nimport { createPortal } from \"react-dom\";\n\n\nconst Popup = () => {\n    const popup = useSelector((state)=>state.popup);\n\n    return createPortal(\n        <>\n            {/* 사진모아보기 팝업 */}\n            {/* {popup.imgPop && <ImgPop />} */}\n\n        </>,\n        document.getElementById('modal-root')\n    );\n};\n\nexport default Popup;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/layout/admin/Layout.js",["176","177"],[],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { notiPop } from \"../../../store/popupSlice\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport NotiPop from \"../../popup/admin/NotiPop\";\n\nimport Main from \"../../../pages/admin/Main\";\nimport MenuCategory from \"../../../pages/admin/MenuCategory\";\nimport Board from \"../../../pages/admin/Board\";\n\nimport SettingSiteInfo from \"../../../pages/admin/SettingSiteInfo\";\nimport SettingPolicy from \"../../../pages/admin/SettingPolicy\";\n\nconst Layout = (props) => {\n    const dispatch = useDispatch();\n    const popup = useSelector((state)=>state.popup);\n    const common = useSelector((state)=>state.common);\n    const user = useSelector((state)=>state.user);\n    const [locationList, setLocationList] = useState([]);\n    const [boardTit, setBoardTit] = useState(\"\");\n\n\n    //현재페이지에 따라 page_inner 변경\n    useEffect(()=>{\n        const page = common.currentPage;\n\n        //메인\n        if(page === null){\n            setLocationList([\"관리자 메인\",\"전체 통계\"]);\n        }\n        //메뉴관리 - 카테고리관리\n        else if(page === \"menu1\"){\n            setLocationList([\"메뉴 관리\",\"카테고리 관리\"]);\n        }\n        //게시판관리 - 게시글관리 전부\n        else if(page.includes(\"board1_\")){\n            let idx = page.replace(\"board1_\",\"\");\n                idx = idx-1;\n            setLocationList([\"게시판 관리\",\"게시글 관리\",common.boardMenu[idx].c_name]);\n            setBoardTit(common.boardMenu[idx].c_name);\n        }\n\n        //환경설정 - 사이트정보\n        else if(page === \"setting1\"){\n            setLocationList([\"환경설정\",\"사이트 정보\"]);\n        }\n        //환경설정 - 운영정책설정\n        else if(page === \"setting2\"){\n            setLocationList([\"환경설정\",\"시스템 운영정책\"]);\n        }\n\n    },[common.currentPage]);\n\n\n    return(\n        <div className=\"body_admin\">\n            <div id=\"wrap\">\n                <Header />\n                <main id=\"main\" className=\"main\">\n                    {/* 상단 */}\n                    <div className=\"admin_location\">\n                        <div className=\"location_wrap\">\n                            <ul className=\"location\">\n                                {locationList.map((cont,i)=>{\n                                    if (i === 0) {\n                                        return <li key={i}><h2>{cont}</h2></li>\n                                    } else {\n                                        return <li key={i}>{cont}</li>\n                                    }\n                                })}\n                            </ul>\n                            <div className=\"header_util\">\n                                <div className=\"admin_util\">\n                                    <a href=\"#\" rel=\"noopener noreferrer\" className=\"btn_user\">사용자화면 바로가기</a>\n                                    {/* 알림 있을 경우 active */}\n                                    <button type=\"button\" className=\"btn_noti active\"\n                                        onClick={()=>{\n                                            dispatch(notiPop(!popup.notiPop));\n                                        }}\n                                    >알림보기</button>\n                                    {/* 알림팝업 */}\n                                    {popup.notiPop && <NotiPop />}\n                                </div>\n                                <div className=\"log_util\">\n                                    <strong><b>{user.loginUser.m_name}</b> 님</strong>\n                                    <button type=\"button\" className=\"btn_logout\">로그아웃</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/* //상단 */}\n                    <section className=\"admin_section\">\n                        <div className=\"page_inner\">\n                            {common.currentPage === null ? <Main /> //메인페이지\n                                : common.currentPage === \"menu1\" ? <MenuCategory /> //메뉴관리 - 카테고리관리\n                                : common.currentPage.includes(\"board1_\") ? <Board tit={boardTit} /> //게시판관리 - 게시글관리 (모든 페이지)\n\n\n                                : common.currentPage === \"setting1\" ? <SettingSiteInfo /> //환경설정 - 사이트정보\n                                : common.currentPage === \"setting2\" && <SettingPolicy /> //환경설정 - 운영정책설정\n                            }      \n                        </div>\n                    </section>\n                </main>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Main.js",["178","179","180"],[],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { enum_api_uri } from \"../../config/enum\";\nimport * as CF from \"../../config/function\";\nimport { confirmPop } from \"../../store/popupSlice\";\nimport TableWrap from \"../../components/component/admin/TableWrap\";\nimport ConfirmPop from \"../../components/popup/ConfirmPop\";\n\n\nconst Main = () => {\n    const main_board_cnt = enum_api_uri.main_board_cnt;\n    const main_board_list = enum_api_uri.main_board_list;\n    const main_connector_cnt = enum_api_uri.main_connector_cnt;\n    const main_connector_list = enum_api_uri.main_connector_list;\n    const dispatch = useDispatch();\n    const popup = useSelector((state)=>state.popup);\n    const user = useSelector((state)=>state.user);\n    const [confirm, setConfirm] = useState(false);\n    const [boardCount, setBoardCount] = useState({});\n    const [boardList, setBoardList] = useState([]);\n    const [connectorCount, setConnectorCount] = useState({});\n    const [connectorList, setConnectorList] = useState([]);\n\n\n    // Confirm팝업 닫힐때\n    useEffect(()=>{\n        if(popup.confirmPop === false){\n            setConfirm(false);\n        }\n    },[popup.confirmPop]);\n\n\n    //최근게시글정보 가져오기\n    const getBoardCount = () => {\n        axios.get(`${main_board_cnt}`,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                let data = res.data.data;\n                setBoardCount(data);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n\n    //최근게시판 리스트 가져오기\n    const getBoardList = () => {\n        axios.get(`${main_board_list.replace(\":limit\",5)}`,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                let data = res.data.data;\n                setBoardList(data);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n\n    //최근접속자정보 가져오기\n    const getConnectorCount = () => {\n        axios.get(`${main_connector_cnt}`,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                let data = res.data.data;\n                setConnectorCount(data);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n\n    //접속자이력 리스트 가져오기\n    const getConnectorList = () => {\n        axios.get(`${main_connector_list.replace(\":limit\",5)}`,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                let data = res.data.data;\n                setConnectorList(data);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n    \n    //맨처음 \n    useEffect(()=>{\n        getBoardCount();\n        getBoardList();\n        getConnectorCount();\n        getConnectorList();\n    },[]);\n\n\n    return(<>\n        <div className=\"page_admin_main\">\n            <div className=\"main_con_wrap\">\n                <div className=\"main_con\">\n                    <div className=\"tit\">\n                        <h3>최근 게시글 정보</h3>\n                    </div>\n                    <div className=\"total_num_box\">\n                        <ul>\n                            <li>\n                                <span>총 게시글</span>\n                                <strong><b>{boardCount.boardTotalCnt ? CF.MakeIntComma(boardCount.boardTotalCnt) : 0}</b> 개</strong>\n                            </li>\n                            <li>\n                                <span>금일 게시글</span>\n                                <strong><b>{boardCount.boardTodayCnt ? CF.MakeIntComma(boardCount.boardTodayCnt) : 0}</b> 개</strong>\n                            </li>\n                            <li>\n                                <span>총 댓글</span>\n                                <strong><b>{boardCount.commentTotalCnt ? CF.MakeIntComma(boardCount.commentTotalCnt) : 0}</b> 개</strong>\n                            </li>\n                            <li>\n                                <span>금일 댓글</span>\n                                <strong><b>{boardCount.commentTodayCnt ? CF.MakeIntComma(boardCount.commentTodayCnt) : 0}</b> 개</strong>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"board_box\">\n                        <h4>최근 게시판 조회</h4>\n                        <TableWrap \n                            class=\"tbl_wrap1\"\n                            colgroup={[\"12%\",\"18%\",\"auto\",\"30%\"]}\n                            thList={[\"번호\",\"게시판명\",\"제목\",\"작성일시\"]}\n                            tdList={boardList}\n                            type={\"main_board\"}\n                        />\n                        <a href=\"#\" rel=\"noopener noreferrer\" className=\"btn_more\">더보기</a>\n                    </div>\n                </div>\n                <div className=\"main_con\">\n                        <div className=\"tit\">\n                            <h3>최근 접속자 정보</h3>\n                        </div>\n                        <div className=\"total_num_box\">\n                            <ul>\n                                <li>\n                                    <span>총 가입회원</span>\n                                    <strong><b>{connectorCount.memberTotalCnt ? CF.MakeIntComma(connectorCount.memberTotalCnt) : 0}</b> 명</strong>\n                                </li>\n                                <li>\n                                    <span>금일 가입회원</span>\n                                    <strong><b>{connectorCount.memberTodayCnt ? CF.MakeIntComma(connectorCount.memberTodayCnt) : 0}</b> 명</strong>\n                                </li>\n                                <li>\n                                    <span>총 방문</span>\n                                    <strong><b>{connectorCount.logsTotalCnt ? CF.MakeIntComma(connectorCount.logsTotalCnt) : 0}</b> 명</strong>\n                                </li>\n                                <li>\n                                    <span>금일 방문</span>\n                                    <strong><b>{connectorCount.logsTodayCnt ? CF.MakeIntComma(connectorCount.logsTodayCnt) : 0}</b> 명</strong>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"board_box\">\n                            <h4>접속자 이력 조회</h4>\n                            <div className=\"tbl_wrap1\">\n                                <TableWrap \n                                    class=\"tbl_wrap1\"\n                                    colgroup={[\"12.12%\",\"27.27%\",\"auto\",\"30.30%\"]}\n                                    thList={[\"접속자\",\"접속 IP\",\"접속 브라우저\",\"접속일시\"]}\n                                    tdList={connectorList}\n                                    type={\"main_connector\"}\n                                />\n                            </div>\n                            <a href=\"#\" rel=\"noopener noreferrer\" className=\"btn_more\">더보기</a>\n                        </div>\n                    </div>\n            </div>\n        </div>\n\n        {/* confirm팝업 */}\n        {confirm && <ConfirmPop />}\n    </>);\n};\n\nexport default Main;","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/Board.js",["181","182","183","184","185","186","187","188","189","190","191","192"],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/MenuCategory.js",["193","194","195"],[],"import { useEffect, useState } from \"react\";\n\nimport MenuListBox from \"../../components/component/admin/MenuListBox\";\n\n\nconst MenuCategory = () => {\n    const [menuList, setMenuList] = useState([\n        {   name:\"About Us\",\n            list:[\n                {   name:\"회사소개 2depth\",\n                    list:[{name:\"회사소개1 3depth\"},{name:\"회사소개2 3depth\"}]\n                },\n                {   name:\"회사비전 2depth\",\n                    list:[]\n                },\n            ]\n        },\n        {   name:\"Service\",\n            list:[\n                {   name:\"서비스 2depth\",\n                    list:[]\n                },\n                {   name:\"서비스2 2depth\",\n                    list:[{name:\"서비스2-1 3depth\"},{name:\"서비스2-2 3depth\"}]\n                },\n            ]\n        },\n    ]);\n    const [unusedMenuList, setUnusedMenuList] = useState([\n        {   \n            list:[{name:\"서비스2-1 3depth\"},{name:\"서비스2-2 3depth\"}]\n        },\n        {   \n            list:[{name:\"서비스2-1 3depth\"},{name:\"서비스2-2 3depth\"}]\n        },\n    ]);\n\n    // useEffect(()=>{\n    //     const newList = menuList.map((menu, index) => `menu${index + 1}`);\n    //     console.log(newList);\n    // },[]);\n\n\n    useEffect(()=>{\n        const menuListWithIds = menuList.map((menu, menuIndex) => ({\n            ...menu,\n            id: `depth1_${menuIndex}`,\n            list: menu.list.map((depth2, depth2Index) => ({\n                ...depth2,\n                id: `depth2_${menuIndex}_${depth2Index}`,\n                list: depth2.list.map((depth3, depth3Index) => ({\n                    ...depth3,\n                    id: `depth3_${menuIndex}_${depth2Index}_${depth3Index}`,\n                })),\n            })),\n        }));\n\n        setMenuList(menuListWithIds);\n\n    },[]);\n\n    return(\n        <div className=\"page_admin_menu\">\n            <div className=\"content_box\">\n                <div className=\"tit\">\n                    <h3><b>전체 카테고리</b></h3>\n                    <ul className=\"list_category_txt\">\n                        <li>\n                            <span>1차 카테고리</span>\n                            <strong>총 4개</strong>\n                        </li>\n                        <li>\n                            <span>2차 카테고리</span>\n                            <strong>총 10개</strong>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"menu_box\">\n                    <div className=\"menu_list_wrap\">\n                        <div className=\"btn_util\">\n                            <div className=\"add_wrap\">\n                                <button type=\"button\" className=\"btn_type5\">1차 카테고리 추가</button>\n                                <button type=\"button\" className=\"btn_type6\">하위 카테고리 등록</button>\n                            </div>\n                            <button type=\"button\" className=\"btn_type7\">삭제</button>\n                        </div>\n                        <div className=\"menu_list_box\">\n                            <MenuListBox \n                                list={menuList}\n                                unusedList={unusedMenuList}\n                            />\n                            <p>* 드래그앤드랍으로 카테고리 순서를 변경할 수 있습니다.<br/>* 드래그앤드랍으로 하위 카테고리는 상위 카테고리 추가 및 미사용 카테고리로 등록할 수 있습니다.</p>\n                        </div>\n                        <div className=\"btn_util\">\n                            <div className=\"add_wrap\">\n                                <button type=\"button\" className=\"btn_type5\">1차 카테고리 추가</button>\n                                <button type=\"button\" className=\"btn_type6\">하위 카테고리 등록</button>\n                            </div>\n                            <button type=\"button\" className=\"btn_type7\">삭제</button>\n                        </div>\n                    </div>\n                    {/* 1차 카테고리 등록 섹션 */}\n                    <div className=\"reg_category_wrap\">\n                        <h4>1차 카테고리</h4>\n                        <div className=\"page_form\">\n                            <form action=\"\">\n                                <fieldset>\n                                    <legend>1차 카테고리 등록 폼</legend>\n                                    <div className=\"form_inner\">\n                                        <div className=\"form_box form_border_box\">\n                                            <div className=\"form_input\">\n                                                <h6>카테고리명 <i>*</i></h6>\n                                                <div className=\"input_wrap\">\n                                                    <div className=\"input_box\">\n                                                        <div className=\"char_cnt\">\n                                                            <b>8</b> / 16\n                                                        </div>\n                                                        <input type=\"text\" placeholder=\"카테고리명을 입력해주세요.\"/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form_input\">\n                                                <h6>서브 메인 배너</h6>\n                                                <div className=\"input_wrap\">\n                                                    <div className=\"chk_rdo_wrap\">\n                                                        <div className=\"rdo_box1\">\n                                                            <input type=\"radio\" id=\"rdo11\" className=\"blind\" checked/>\n                                                            <label htmlFor=\"rdo11\">원본 사이즈 고정</label>\n                                                        </div>\n                                                        <div className=\"rdo_box1\">\n                                                            <input type=\"radio\" id=\"rdo12\" className=\"blind\"/>\n                                                            <label htmlFor=\"rdo12\">커버</label>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"file_box1\">\n                                                        <div className=\"input_file\">\n                                                            <input type=\"file\" id=\"file11\" className=\"blind\"/>\n                                                            <label htmlFor=\"file11\">\n                                                                <b>파일을 마우스로 끌어 오세요.</b>\n                                                                <strong>파일선택</strong>\n                                                            </label>\n                                                        </div>\n                                                        <ul className=\"file_txt\">\n                                                            <li>\n                                                                <span>이미지.JPG</span>\n                                                                <button type=\"button\" className=\"btn_file_remove\">파일삭제</button>\n                                                            </li>\n                                                        </ul>\n                                                    </div>\n                                                    <em className=\"txt_input\">* 권장 : 1800 * 320 px</em>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"form_box\">\n                                            <div className=\"form_input\">\n                                                <h6>메뉴 UI <i>*</i></h6>\n                                                <div className=\"input_wrap\">\n                                                    <div className=\"chk_rdo_wrap\">\n                                                        <div className=\"rdo_box1\">\n                                                            <input type=\"radio\" id=\"rdo21\" className=\"blind\"/>\n                                                            <label htmlFor=\"rdo21\">텍스트</label>\n                                                        </div>\n                                                        <div className=\"rdo_box1\">\n                                                            <input type=\"radio\" id=\"rdo22\" className=\"blind\" checked/>\n                                                            <label htmlFor=\"rdo22\">이미지</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form_input\">\n                                                <h6>메뉴 이미지 ON</h6>\n                                                <div className=\"input_wrap\">\n                                                    <div className=\"file_box1\">\n                                                        <div className=\"input_file\">\n                                                            <input type=\"file\" id=\"file2\" className=\"blind\"/>\n                                                            <label htmlFor=\"file2\">\n                                                                <b>파일을 마우스로 끌어 오세요.</b>\n                                                                <strong>파일선택</strong>\n                                                            </label>\n                                                        </div>\n                                                        <ul className=\"file_txt\">\n                                                            <li>\n                                                                <span>이미지.JPG</span>\n                                                                <button type=\"button\" className=\"btn_file_remove\">파일삭제</button>\n                                                            </li>\n                                                        </ul>\n                                                        <div className=\"view_file_img\">\n                                                            <div className=\"file_img\">\n                                                                <img src=\"images/test1.png\" alt=\"image\"/>\n                                                                <button type=\"button\" className=\"btn_img_remove\">이미지 삭제</button>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"form_input\">\n                                                <h6>메뉴 이미지 OFF</h6>\n                                                <div className=\"input_wrap\">\n                                                    <div className=\"file_box1\">\n                                                        <div className=\"input_file\">\n                                                            <input type=\"file\" id=\"file2\" className=\"blind\"/>\n                                                            <label htmlFor=\"file2\">\n                                                                <b>파일을 마우스로 끌어 오세요.</b>\n                                                                <strong>파일선택</strong>\n                                                            </label>\n                                                        </div>\n                                                        <ul className=\"file_txt\">\n                                                            <li>\n                                                                <span>이미지.JPG</span>\n                                                                <button type=\"button\" className=\"btn_file_remove\">파일삭제</button>\n                                                            </li>\n                                                        </ul>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form_btn_wrap\">\n                                        <button type=\"button\" className=\"btn_type1\">취소</button>\n                                        <button type=\"button\" className=\"btn_type2\">등록</button>\n                                    </div>\n                                </fieldset>\n                            </form>\n                        </div>\n                    </div>\n                    {/* //1차 카테고리 등록 섹션 */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MenuCategory;","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/SettingPolicy.js",["196","197","198","199","200","201","202","203","204","205","206","207"],[],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { enum_api_uri } from \"../../config/enum\";\nimport * as CF from \"../../config/function\";\nimport { confirmPop } from \"../../store/popupSlice\";\nimport InputBox from \"../../components/component/admin/InputBox\";\nimport ConfirmPop from \"../../components/popup/ConfirmPop\";\n\n\nconst SettingPolicy = () => {\n    const dispatch = useDispatch();\n    const popup = useSelector((state)=>state.popup);\n    const [confirm, setConfirm] = useState(false);\n\n\n\n    // Confirm팝업 닫힐때\n    useEffect(()=>{\n        if(popup.confirmPop === false){\n            setConfirm(false);\n        }\n    },[popup.confirmPop]);\n\n\n    return(<>\n        <div className=\"page_admin_setting\">\n            <div className=\"content_box\">\n                <div className=\"tit tit2\">\n                    <h3>\n                        <b>운영정책</b>\n                    </h3>\n                    <strong>총 5개</strong>\n                </div>\n                <div className=\"board_section\">\n                    <div className=\"form_search_wrap\">\n                        <div className=\"search_wrap\">\n                            <div className=\"select_type3 search_row_select\">\n                                <select name=\"\" id=\"\" title=\"행 개수\">\n                                    <option value=\"\">10개씩</option>\n                                    <option value=\"\">15개씩</option>\n                                    <option value=\"\">30개씩</option>\n                                    <option value=\"\">50개씩</option>\n                                </select>\n                            </div>\n                            <div className=\"search_box\">\n                                <div className=\"select_type3\">\n                                    <select name=\"\" id=\"\" title=\"검색 범위\">\n                                        <option value=\"\">제목만</option>\n                                        <option value=\"\">제목 + 내용</option>\n                                    </select>\n                                </div>\n                                <div className=\"search_input\">\n                                    <div className=\"input_box\">\n                                        <input type=\"text\" placeholder=\"검색어를 입력해주세요.\"/>\n                                    </div>\n                                    <button type=\"button\" className=\"btn_search\">검색하기</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"board_table_util\">\n                        <div className=\"chk_area\">\n                            <div className=\"chk_box2\">\n                                <input type=\"checkbox\" id=\"chkAll\" className=\"blind\"/>\n                                <label for=\"chkAll\">전체선택</label>\n                            </div>\n                        </div>\n                        <div className=\"util_wrap\">\n                            <span>선택한 운영정책</span>\n                            <span>총 <b>0</b>명</span>\n                            <div className=\"btn_box\">\n                                {/* <button type=\"button\" className=\"btn_type18\">노출</button> */}\n                                <button type=\"button\" className=\"btn_type18 on\">노출</button>\n                                <button type=\"button\" className=\"btn_type19\">중단</button>\n                                {/* <button type=\"button\" className=\"btn_type19 on\">중단</button> */}\n                            </div>\n                        </div>\n                        <div className=\"util_right\">\n                            <button type=\"button\" className=\"btn_type9\">삭제</button>\n                        </div>\n                    </div>\n                    <div className=\"tbl_wrap1 tbl_wrap1_1\">\n                        <table>\n                            <caption>게시판 테이블</caption>\n                            <colgroup>\n                                <col style={{width: \"80px\"}}/>\n                                <col style={{width: \"9%\"}}/>\n                                <col style={{width: \"auto\"}}/>\n                                <col style={{width: \"18%\"}}/>\n                                <col style={{width: \"12%\"}}/>\n                            </colgroup>\n                            <thead>\n                                <tr>\n                                    <th></th>\n                                    <th>구분</th>\n                                    <th>제목</th>\n                                    <th>작성일시</th>\n                                    <th>사용여부</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <div className=\"chk_box2\">\n                                            <input type=\"checkbox\" id=\"chk11\" className=\"blind\"/>\n                                            <label for=\"chk11\">선택</label>\n                                        </div>\n                                    </td>\n                                    <td>5</td>\n                                    <td>\n                                        <a href=\"#\">이용약관</a>\n                                    </td>\n                                    <td>\n                                        <span className=\"txt_light\">2018.10.10 10:20</span>\n                                    </td>\n                                    <td>\n                                        <em className=\"txt_color1\">노출</em>\n                                        {/* <em className=\"txt_color2\">중단</em> */}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div className=\"chk_box2\">\n                                            <input type=\"checkbox\" id=\"chk11\" className=\"blind\"/>\n                                            <label for=\"chk11\">선택</label>\n                                        </div>\n                                    </td>\n                                    <td>4</td>\n                                    <td>\n                                        <a href=\"#\">개인정보 수집 및 이용</a>\n                                    </td>\n                                    <td>\n                                        <span className=\"txt_light\">2018.10.10 10:20</span>\n                                    </td>\n                                    <td>\n                                        <em className=\"txt_color1\">노출</em>\n                                        {/* <em className=\"txt_color2\">중단</em> */}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div className=\"chk_box2\">\n                                            <input type=\"checkbox\" id=\"chk11\" className=\"blind\"/>\n                                            <label for=\"chk11\">선택</label>\n                                        </div>\n                                    </td>\n                                    <td>3</td>\n                                    <td>\n                                        <a href=\"#\">개인정보 제3자 제공</a>\n                                    </td>\n                                    <td>\n                                        <span className=\"txt_light\">2018.10.10 10:20</span>\n                                    </td>\n                                    <td>\n                                        <em className=\"txt_color1\">노출</em>\n                                        {/* <em className=\"txt_color2\">중단</em> */}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div className=\"chk_box2\">\n                                            <input type=\"checkbox\" id=\"chk11\" className=\"blind\"/>\n                                            <label for=\"chk11\">선택</label>\n                                        </div>\n                                    </td>\n                                    <td>2</td>\n                                    <td>\n                                        <a href=\"#\">개인정보 취급위탁</a>\n                                    </td>\n                                    <td>\n                                        <span className=\"txt_light\">2018.10.10 10:20</span>\n                                    </td>\n                                    <td>\n                                        <em className=\"txt_color1\">노출</em>\n                                        {/* <em className=\"txt_color2\">중단</em> */}\n                                    </td>\n                                </tr>\n                                <tr className=\"disabled\">\n                                    <td>\n                                        <div className=\"chk_box2\">\n                                            <input type=\"checkbox\" id=\"chk11\" className=\"blind\"/>\n                                            <label for=\"chk11\">선택</label>\n                                        </div>\n                                    </td>\n                                    <td>1</td>\n                                    <td>\n                                        <a href=\"#\">비회원 정보수집 동의</a>\n                                    </td>\n                                    <td>\n                                        <span className=\"txt_light\">2018.10.10 10:20</span>\n                                    </td>\n                                    <td>\n                                        {/* <em className=\"txt_color1\">노출</em> */}\n                                        <em className=\"txt_color2\">중단</em>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"form_btn_wrap\">\n                        <a href=\"#\" className=\"btn_type4\">작성</a>                                        \n                    </div>\n                </div>\n            </div>\n        </div>\n\n        {/* confirm팝업 */}\n        {confirm && <ConfirmPop />}\n    </>);\n};\n\nexport default SettingPolicy;","/Users/sol/Documents/GitHub/basic_solution_react/src/pages/admin/SettingSiteInfo.js",["208","209","210"],[],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { enum_api_uri } from \"../../config/enum\";\nimport * as CF from \"../../config/function\";\nimport { confirmPop } from \"../../store/popupSlice\";\nimport InputBox from \"../../components/component/admin/InputBox\";\nimport ConfirmPop from \"../../components/popup/ConfirmPop\";\n\n\nconst SettingSiteInfo = () => {\n    const site_info = enum_api_uri.site_info;\n    const site_info_modify = enum_api_uri.site_info_modify;\n    const dispatch = useDispatch();\n    const popup = useSelector((state)=>state.popup);\n    const user = useSelector((state)=>state.user);\n    const [cancelConfirm, setCancelConfirm] = useState(false);\n    const [confirm, setConfirm] = useState(false);\n    const [info, setInfo] = useState({});\n    const [error, setError] = useState({});\n\n\n    // Confirm팝업 닫힐때\n    useEffect(()=>{\n        if(popup.confirmPop === false){\n            setConfirm(false);\n            setCancelConfirm(false);\n        }\n    },[popup.confirmPop]);\n\n\n    //사이트정보 가져오기\n    const getInfo = () => {\n        axios.get(`${site_info.replace(\":site_id\",user.siteId)}`,\n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                let data = res.data.data;\n                    data.site_id = user.siteId;\n                setInfo(data);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n    \n    //맨처음 사이트정보 가져오기\n    useEffect(()=>{\n        getInfo();\n    },[]);\n\n\n    useEffect(()=>{\n        if(Object.keys(info).length > 0){\n            setInfo(info);\n        }\n    },[info]);\n\n\n    //인풋값 변경시\n    const onInputChangeHandler = (e) => {\n        const id = e.currentTarget.id;\n        const val = e.currentTarget.value;\n\n        let newInfo = {...info};\n            newInfo[id] = val;\n            \n        setInfo(newInfo);\n\n        if(id == \"c_site_name\" && val.length > 0){\n            let newError = {...error};\n                newError.c_site_name = false;\n            setError(newError);\n        }\n        if(id == \"c_b_title\" && val.length > 0){\n            let newError = {...error};\n                newError.c_b_title = false;\n            setError(newError);\n        }\n    };\n\n\n    //저장버튼 클릭시\n    const saveBtnClickHandler = () => {\n        let newError = { ...error };\n\n        if (!info.c_site_name) {\n            newError.c_site_name = true;\n        }\n        if (!info.c_b_title) {\n            newError.c_b_title = true;\n        }\n\n        setError(newError);\n\n        if (!newError.c_site_name && !newError.c_b_title) {\n            saveHandler();\n        }\n    };\n\n\n    //사이트정보 저장하기\n    const saveHandler = () => {\n        const body = info;\n        axios.put(`${site_info_modify}`, body, \n            {headers:{Authorization: `Bearer ${user.loginUser.accessToken}`}}\n        )\n        .then((res)=>{\n            if(res.status === 200){\n                dispatch(confirmPop({\n                    confirmPop:true,\n                    confirmPopTit:'알림',\n                    confirmPopTxt:'사이트정보가 저장되었습니다.',\n                    confirmPopBtn:1,\n                }));\n                setConfirm(true);\n            }\n        })\n        .catch((error) => {\n            const err_msg = CF.errorMsgHandler(error);\n            dispatch(confirmPop({\n                confirmPop:true,\n                confirmPopTit:'알림',\n                confirmPopTxt: err_msg,\n                confirmPopBtn:1,\n            }));\n            setConfirm(true);\n        });\n    };\n\n\n    //취소버튼 클릭시\n    const cancelBtnClickHandler = () => {\n        dispatch(confirmPop({\n            confirmPop:true,\n            confirmPopTit:'알림',\n            confirmPopTxt:'작성 중인 내용을 취소하시겠습니까?',\n            confirmPopBtn:2,\n        }));\n        setCancelConfirm(true);\n    };\n    \n\n    //취소하기 사이트정보 다시 가져오기\n    const cancelHandler = () => {\n        getInfo();\n    };\n    \n\n    return(<>\n        <div className=\"page_admin_setting\">\n            <div className=\"content_box\">\n                <div className=\"tit\">\n                    <h3>\n                        <b>기본 정보</b>\n                    </h3>\n                    <p>입력된 정보는 웹사이트 하단과 개인정보취급방침 고지란에 기재됩니다.</p>\n                </div>\n                <div className=\"tbl_wrap2\">\n                    <table>\n                        <caption>정보 테이블</caption>\n                        <colgroup>\n                            <col style={{width: \"140px\"}}/>\n                            <col style={{width: \"auto\"}}/>\n                            <col style={{width: \"24px\"}}/>\n                            <col style={{width: \"140px\"}}/>\n                            <col style={{width: \"auto\"}}/>\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <th>사이트이름 <i>*</i></th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`사이트이름을 입력해주세요.`}\n                                        countShow={true}\n                                        countMax={16}\n                                        count={info.c_site_name ? info.c_site_name.length : 0}\n                                        value={info.c_site_name || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_site_name`}\n                                        className={error.c_site_name ? \"wrong_input\" : \"\"}\n                                    />\n                                    {error.c_site_name && <em className=\"txt_err\">사이트이름을 입력해주세요.</em>}\n                                </td>\n                                <td></td>\n                                <th>웹 브라우저 타이틀</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`웹 브라우저 타이틀을 입력해주세요.`}\n                                        countShow={true}\n                                        countMax={16}\n                                        count={info.c_web_title ? info.c_web_title.length : 0}\n                                        value={info.c_web_title || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_web_title`}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>대표자</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`대표자를 입력해주세요.`}\n                                        value={info.c_ceo || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_ceo`}\n                                    />\n                                </td>\n                                <td></td>\n                                <th>대표전화</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`대표전화를 입력해주세요.`}\n                                        value={info.c_tel || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_tel`}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>사업자번호</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`사업자번호를 입력해주세요.`}\n                                        value={info.c_num || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_num`}\n                                    />\n                                </td>\n                                <td></td>\n                                <th>통신판매번호</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`통신판매번호를 입력해주세요.`}\n                                        value={info.c_num2 || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_num2`}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>이메일</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`이메일을 입력해주세요.`}\n                                        value={info.c_email || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_email`}\n                                    />\n                                </td>\n                                <td></td>\n                                <th>주소</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`주소를 입력해주세요.`}\n                                        value={info.c_address || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_address`}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>FAX 번호</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`FAX 번호를 입력해주세요.`}\n                                        value={info.c_fax || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_fax`}\n                                    />\n                                </td>\n                                <td></td>\n                                <th>개인정보관리책임자</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`개인정보관리책임자를 입력해주세요.`}\n                                        value={info.c_manager || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_manager`}\n                                    />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className=\"content_box\">\n                <div className=\"tit\">\n                    <h3>\n                        <b>메타정보</b>\n                    </h3>\n                    <p>웹마스터 도구에 활용되어 포털 검색 시 노출되는 정보입니다.</p>\n                </div>\n                <div className=\"tbl_wrap2\">\n                    <table>\n                        <caption>정보 테이블</caption>\n                        <colgroup>\n                            <col style={{width: \"140px\"}}/>\n                            <col style={{width: \"auto\"}}/>\n                            <col style={{width: \"24px\"}}/>\n                            <col style={{width: \"140px\"}}/>\n                            <col style={{width: \"auto\"}}/>\n                        </colgroup>\n                        <tbody>\n                            <tr>\n                                <th>브라우저 타이틀 <i>*</i></th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`브라우저 타이틀을 입력해주세요.`}\n                                        value={info.c_b_title || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_b_title`}\n                                        className={error.c_b_title ? \"wrong_input\" : \"\"}\n                                    />\n                                    {error.c_b_title && <em className=\"txt_err\">브라우저 타이틀을 입력해주세요.</em>}\n                                </td>\n                                <td></td>\n                                <th>메타설명</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`메타설명을 입력해주세요.`}\n                                        value={info.c_meta || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_meta`}\n                                    />\n                                </td>\n                            </tr>\n                            <tr>\n                                <th>메타 태그</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`메타 태그를 입력해주세요.`}\n                                        value={info.c_meta_tag || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_meta_tag`}\n                                    />\n                                </td>\n                                <td></td>\n                                <th>메타 분류</th>\n                                <td>\n                                    <InputBox \n                                        type={`text`}\n                                        placeholder={`메타 분류를 입력해주세요.`}\n                                        value={info.c_meta_type || \"\"}\n                                        onChangeHandler={onInputChangeHandler}\n                                        id={`c_meta_type`}\n                                    />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className=\"form_btn_wrap\">\n                <button type=\"button\" className=\"btn_type3\" onClick={cancelBtnClickHandler}>취소</button>\n                <button type=\"button\" className=\"btn_type4\" onClick={saveBtnClickHandler}>저장</button>\n            </div>\n        </div>\n\n        {/* 취소 confirm팝업 */}\n        {cancelConfirm && <ConfirmPop onClickHandler={cancelHandler} />}\n\n        {/* confirm팝업 */}\n        {confirm && <ConfirmPop />}\n    </>);\n};\n\nexport default SettingSiteInfo;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/layout/admin/Footer.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/layout/admin/Header.js",["211","212","213"],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/popup/admin/NotiPop.js",["214","215","216","217","218","219"],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/popup/ConfirmPop.js",["220"],[],"import { useSelector, useDispatch } from \"react-redux\";\nimport { createPortal } from \"react-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { confirmPop } from \"../../store/popupSlice\";\n\nconst ConfirmPop = (props) => {\n    const popup = useSelector((state)=>state.popup);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    //팝업닫기\n    const closePopHandler = () => {\n\n        //팝업닫기 custom <ConfirmPop closePop=\"custom\" onCloseHandler={팝업닫는함수} /> 형식으로 쓰면 원하는 팝업닫는함수사용 가능\n        if(props.closePop == 'custom'){\n            props.onCloseHandler();\n        }\n\n        //창 이동 <ConfirmPop goBack={1}/> 형식으로 쓰면 숫자만큼 확인후 뒤로감\n        if(props.goBack){\n            navigate(-props.goBack);\n        }\n\n        if(!props.goBack && !props.closePop){\n            dispatch(confirmPop({confirmPop:false}));\n        }\n    };\n\n\n    return createPortal(\n        <>\n            {popup.confirmPop &&\n                <div className=\"confirm_pop\">\n                    <div className=\"dim\"></div>\n                    <div className=\"pop_cont\">\n                        <div className=\"pop_tit flex_between\">\n                            <p>{popup.confirmPopTit}</p>\n                            <button type=\"button\" className=\"btn_close\" onClick={closePopHandler}>닫기버튼</button>\n                        </div>\n                        <p className=\"txt\">{popup.confirmPopTxt}</p>\n                        {popup.confirmPopBtn === 1 &&\n                            <div className=\"btn_box\">\n                                <button type=\"button\" className=\"btn_type4\" onClick={closePopHandler}>확인</button>\n                            </div>\n                        }\n                        {popup.confirmPopBtn === 2 &&\n                            <div className=\"btn_box2\">\n                                <button type=\"button\" className=\"btn_type4\" onClick={()=>{\n                                    props.onClickHandler();\n                                    closePopHandler();\n                                }}>확인</button>\n                                <button type=\"button\" className=\"btn_type3\" onClick={closePopHandler}>취소</button>\n                            </div>\n                        }\n                    </div>\n                </div>\n            }\n        </>,\n        document.getElementById('modal-root')\n    );\n};\n\nexport default ConfirmPop;","/Users/sol/Documents/GitHub/basic_solution_react/src/config/enum.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/config/function.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/SelectBox.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/MenuListBox.js",["221","222","223","224","225","226","227","228"],[],"import { useEffect, useState } from \"react\";\nimport {\n    DndContext,\n    closestCenter,\n    KeyboardSensor,\n    PointerSensor,\n    MouseSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    arrayMove,\n    SortableContext,\n    sortableKeyboardCoordinates,\n    verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\nimport MenuDepth1 from \"./MenuDepth1\";\nimport UnusedMenu from \"./UnusedMenu\";\n\n\nconst MenuListBox = (props) => {\n    const [list, setList] = useState([]);\n    const [liClasses, setLiClasses] = useState({});\n    const [li2Classes, setLi2Classes] = useState({});\n    const [unusedList, setUnusedList] = useState([]);\n    const [unusedMenu, setUnusedMenu] = useState(0);\n    const [unusedMenuOn, setUnusedMenuOn] = useState(false);\n\n    const [menuIdList, setMenuIdList] = useState([]);\n\n    const [assiDnd, setAssiDnd] = useState(false);\n    const [assiDndEnd, setAssiDndEnd] = useState(false);\n\n\n    const [liOnIdx, setLiOnIdx] = useState(null);\n\n\n    // 메뉴 카테고리 리스트\n    useEffect(()=>{\n        setList(props.list);\n        console.log(props.list);\n\n        const idList = props.list.map((menu) => menu.id);\n        // idList.unshift(\"menu0\");\n\n        setMenuIdList(idList);\n    },[props.list]);\n\n\n    //미사용 카테고리 리스트\n    useEffect(()=>{\n        setUnusedList(props.unusedList);\n\n        // 미사용카테고리 개수\n        const num = props.unusedList[0].list.length + props.unusedList[1].list.length;\n        setUnusedMenu(num);\n    },[props.unusedList]);\n\n\n    //1뎁스 메뉴토글버튼 클릭시\n    const liFolderHandler = (index) => {\n        // 버튼을 클릭하면 해당 인덱스의 liClasses 상태를 토글합니다.\n        setLiClasses((prevClasses) => ({\n            ...prevClasses,\n            [index]: !prevClasses[index], // 토글\n        }));\n\n        setLiOnIdx(index);\n      \n        // // index-로 시작하는 모든 키를 false로 설정합니다.\n        // const updatedClasses = { ...li2Classes };\n        // for (let key in updatedClasses) {\n        //     if (key.startsWith(`${index}-`)) {\n        //         updatedClasses[key] = false;\n        //     }\n        // }\n      \n        // // 변경된 li2Classes를 설정합니다.\n        // setLi2Classes(updatedClasses);\n    };\n\n\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n              distance: 5,\n            },\n        }),\n        useSensor(MouseSensor, {\n            activationConstraint: {\n              distance: 5,\n            },\n        }),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        }),\n    );\n\n\n    const handleDragStart = () => {\n        // console.log('dnd 시작');\n\n    };\n\n\n    const handleDragEnd = (event) => {\n        const {active, over} = event;\n        console.log(event)\n        \n        // if(active.id.includes(\"depth1_\") && over.id.includes(\"depth1_\")){\n\n        \n        if (active.id !== over.id) {\n            setList((items) => {\n                const oldIndex = items.findIndex((item) => item.id === active.id);\n                const newIndex = items.findIndex((item) => item.id === over.id);\n\n                return arrayMove(items, oldIndex, newIndex);\n            });\n        }\n        setAssiDnd(true);\n        setAssiDndEnd(true);\n    // }\n    }\n    \n\n\n    return(<>\n        <ul className=\"list_menu1\">\n            <DndContext\n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragStart={handleDragStart}\n                onDragEnd={handleDragEnd}\n            >\n                <SortableContext\n                    items={list.map((menu) => menu.id)}\n                    strategy={verticalListSortingStrategy}\n                >\n                    {list.map((cont,idx)=>{\n                        const isLiOn = liClasses[idx] ? 'on' : '';\n\n                        return(\n                            <MenuDepth1 \n                                key={idx}\n                                data={cont}\n                                idx={idx}\n                                liFolderBtnClickHandler={()=>{liFolderHandler(idx)}}\n                                id={`depth1_${idx}`}\n                                isLiOn={isLiOn}\n                                liOnIdx={liOnIdx}\n                            />\n                        );\n                    })}\n                </SortableContext>\n                \n\n                    {/* 미사용 카테고리 */}\n                    <UnusedMenu \n                        data={unusedList}\n                        id={\"unusedMenu\"}\n                    />\n                    {/* <li className={`disable_menu_wrap${unusedMenuOn ? \" on\" : \"\"}`} id=\"menu0\">\n                        <button type=\"button\" \n                            className=\"btn_disable_menu\"\n                            onClick={()=>{setUnusedMenuOn(!unusedMenuOn)}}\n                        >미사용 카테고리{unusedMenu > 0 && \"(\"+unusedMenu+\")\"}</button>\n                        <div className=\"disable_menu\">\n                            {unusedMenu > 0 ?\n                                <SortableContext items={[\"menu0\"]} id=\"menu0\">\n                                    <ul className=\"list_disable_menu\">\n                                        {unusedList[0].list.map((cont,i)=>{\n                                            return(\n                                                <li key={i}>\n                                                    <div className=\"menu menu1\">\n                                                        <span>{cont.name}</span>\n                                                        <div className=\"btn_wrap\">\n                                                            <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            );\n                                        })}\n                                        {unusedList[1].list.map((cont,i)=>{\n                                            return(\n                                                <li key={i}>\n                                                    <div className=\"menu menu2\">\n                                                        <span>{cont.name}</span>\n                                                        <div className=\"btn_wrap\">\n                                                            <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            );\n                                        })}\n                                    </ul>\n                                </SortableContext>\n                                : <div className=\"none_category\">카테고리가 없습니다.</div>\n                            }\n                        </div>\n                    </li> */}\n                \n\n\n                \n            </DndContext>\n\n           \n        </ul>\n    </>);\n};\n\nexport default MenuListBox;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/SearchInput.js",[],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/InputBox.js",["229","230"],[],"import { useEffect, useState } from \"react\";\n\n\nconst InputBox = (props) => {\n\n\n    return(\n        <div className=\"input_box\">\n            {props.countShow && <span className=\"char_cnt\">{`${props.count}/${props.countMax}`}</span>}\n            <input type={props.type} \n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={props.onChangeHandler}\n                id={props.id}\n                maxLength={props.countMax}\n                className={props.className}\n            />\n        </div>\n\n    );\n};\n\nexport default InputBox;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/TableWrap.js",["231","232","233","234","235","236","237","238","239","240"],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/MenuDepth1.js",["241","242","243","244","245","246","247","248","249"],[],"import { useEffect, useState } from \"react\";\n// import {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport {\n    DndContext,\n    closestCenter,\n    KeyboardSensor,\n    PointerSensor,\n    MouseSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    useSortable,\n    arrayMove,\n    SortableContext,\n    sortableKeyboardCoordinates,\n    verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport MenuDepth2 from \"./MenuDepth2\";\n\nconst MenuDepth1 = (props) => {\n    const [data, setData] = useState({});\n    const [li2Classes, setLi2Classes] = useState({});\n    const [menuIdList, setMenuIdList] = useState([]);\n\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n        isSorting,\n    } = useSortable({id: props.id});\n    \n    const style = {\n        transform: CSS.Transform.toString(transform && { ...transform, scaleY: 1 }),\n        transition: isSorting ? transition : undefined,\n        zIndex: isDragging ? '100' : undefined,\n    };\n\n    \n    useEffect(()=>{\n        setData(props.data);\n        // console.log(props.data);\n\n        const idList = props.data.list.map((menu) => menu.id);\n        setMenuIdList(idList);\n    },[props.data]);\n\n\n    useEffect(()=>{\n        const idx = props.liOnIdx;\n\n        // index-로 시작하는 모든 키를 false로 설정합니다.\n        const updatedClasses = { ...li2Classes };\n        for (let key in updatedClasses) {\n            if (key.startsWith(`${idx}-`)) {\n                updatedClasses[key] = false;\n            }\n        }\n    \n        // 변경된 li2Classes를 설정합니다.\n        setLi2Classes(updatedClasses);\n    },[props.liOnIdx]);\n    \n    \n\n    //2뎁스 메뉴토글버튼 클릭시\n    const liFolderHandler = (index) => {\n        // 버튼을 클릭하면 해당 인덱스의 li2Classes 상태를 토글합니다.\n        setLi2Classes((prevClasses) => ({\n            ...prevClasses,\n            [index]: !prevClasses[index], // 토글\n        }));\n    };\n\n\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n              distance: 5,\n            },\n        }),\n        useSensor(MouseSensor, {\n            activationConstraint: {\n              distance: 5,\n            },\n        }),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        }),\n    );\n\n\n    const handleDragStart = () => {\n        // console.log('dnd 시작');\n\n    };\n\n\n    const handleDragEnd = (event) => {\n        const {active, over} = event;\n        // console.log(event)\n        \n        // if (active.id !== over.id && over.id !== \"unusedMenu\") {\n        //     setList((items) => {\n        //         const oldIndex = items.findIndex((item) => item.id === active.id);\n        //         const newIndex = items.findIndex((item) => item.id === over.id);\n\n        //         return arrayMove(items, oldIndex, newIndex);\n        //     });\n        // }\n        // setAssiDnd(true);\n        // setAssiDndEnd(true);\n    }\n\n\n\n    return(\n        <li style={style}\n            ref={setNodeRef}\n            className={props.isLiOn}\n            id={props.id}\n        >\n            <div className=\"menu\">\n                <span>{data && data.name}{data && data.list && data.list.length > 0 && \" (\"+data.list.length+\")\"}</span>\n                <div className=\"btn_wrap\">\n                    <button type=\"button\" className=\"btn_add\">하위 카테고리 등록</button>\n                    <button type=\"button\" className=\"btn_folder\" onClick={props.liFolderBtnClickHandler}>하위 카테고리 열고 닫기</button>\n                    <button type=\"button\" className=\"btn_move\" {...attributes} {...listeners}>카테고리 이동</button>\n                </div>\n            </div>\n            <ul className=\"list_menu2\">\n                {/* <DndContext\n                    sensors={sensors}\n                    collisionDetection={closestCenter}\n                    onDragStart={handleDragStart}\n                    onDragEnd={handleDragEnd}\n                > */}\n                    <SortableContext\n                        items={menuIdList}\n                        strategy={verticalListSortingStrategy}\n                    >\n                        {data && data.list && data.list.length > 0 ?\n                            data.list.map((depth2,i)=>{\n                                const isLiOn = li2Classes[`${props.idx}_${i}`] ? 'on' : '';\n\n                                return(\n                                    <MenuDepth2 \n                                        key={i}\n                                        data={depth2}\n                                        idx={i}\n                                        liFolderBtnClickHandler={()=>{liFolderHandler(`${props.idx}_${i}`)}}\n                                        id={`depth2_${props.idx}_${i}`}\n                                        isLiOn={isLiOn}\n                                    />\n                                    // <li key={i} className={isLiOn}>\n                                    //     <div className=\"menu\">\n                                    //         <span>{depth2.name}</span>\n                                    //         <div className=\"btn_wrap\">\n                                    //             <button type=\"button\" className=\"btn_add\">하위 카테고리 등록</button>\n                                    //             <button type=\"button\" className=\"btn_folder\" onClick={() => li2FolderHandler(`${props.idx}-${i}`)}>하위 카테고리 열고 닫기</button>\n                                    //             <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                    //         </div>\n                                    //     </div>\n                                    //     <ul className=\"list_menu3\">\n                                    //         {depth2.list.length > 0 ?\n                                    //             depth2.list.map((depth3,i)=>{\n                                    //                 return(\n                                    //                     <li key={i}>\n                                    //                         <div className=\"menu\">\n                                    //                             <span>{depth3.name}</span>\n                                    //                             <div className=\"btn_wrap\">\n                                    //                                 <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                    //                             </div>\n                                    //                         </div>\n                                    //                     </li>\n                                    //                 );\n                                    //             })\n                                    //             : <li className=\"none_category\">카테고리가 없습니다.</li>\n                                    //         }\n                                    //     </ul>\n                                    // </li>\n                                );\n                            })\n                            : <li className=\"none_category\">카테고리가 없습니다.</li>\n                        }\n                    </SortableContext>\n                {/* </DndContext> */}\n            </ul>\n        </li>\n    );\n};\n\nexport default MenuDepth1;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/UnusedMenu.js",["250","251","252","253"],[],"import { useEffect, useState } from \"react\";\nimport {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\n\nconst UnusedMenu = (props) => {\n    const [data, setData] = useState({});\n    const [unusedMenu, setUnusedMenu] = useState(0);\n    const [unusedMenuOn, setUnusedMenuOn] = useState(false);\n\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n        isSorting,\n    } = useSortable({id: props.id});\n    \n    const style = {\n        transform: CSS.Transform.toString(transform && { ...transform, scaleY: 1 }),\n        transition: isSorting ? transition : undefined,\n        zIndex: isDragging ? '100' : undefined,\n    };\n\n    \n    useEffect(()=>{\n        setData(props.data);\n        // console.log(props.data)\n    },[props.data]);\n    \n    \n\n\n    return(\n        <li style={style} className={`disable_menu_wrap${unusedMenuOn ? \" on\" : \"\"}`}>\n            <button type=\"button\" \n                className=\"btn_disable_menu\"\n                onClick={()=>{setUnusedMenuOn(!unusedMenuOn)}}\n            >미사용 카테고리{unusedMenu > 0 && \"(\"+unusedMenu+\")\"}</button>\n            <div className=\"disable_menu\">\n                {unusedMenu > 0 ?\n                    <ul className=\"list_disable_menu\">\n                        {data[0].list.map((cont,i)=>{\n                            return(\n                                <li key={i}>\n                                    <div className=\"menu menu1\">\n                                        <span>{cont.name}</span>\n                                        <div className=\"btn_wrap\">\n                                            <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                        </div>\n                                    </div>\n                                </li>\n                            );\n                        })}\n                        {data[1].list.map((cont,i)=>{\n                            return(\n                                <li key={i}>\n                                    <div className=\"menu menu2\">\n                                        <span>{cont.name}</span>\n                                        <div className=\"btn_wrap\">\n                                            <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                        </div>\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                    : <div className=\"none_category\">카테고리가 없습니다.</div>\n                }\n            </div>\n        </li>\n    );\n};\n\nexport default UnusedMenu;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/MenuDepth2.js",["254","255","256","257","258","259","260","261","262","263","264","265","266","267"],[],"import { useEffect, useState } from \"react\";\n// import {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport {\n    DndContext,\n    closestCenter,\n    KeyboardSensor,\n    PointerSensor,\n    MouseSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    useSortable,\n    arrayMove,\n    SortableContext,\n    sortableKeyboardCoordinates,\n    verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\nconst MenuDepth2 = (props) => {\n    const [data, setData] = useState({});\n    const [li2Classes, setLi2Classes] = useState({});\n    const [menuIdList, setMenuIdList] = useState([]);\n\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n        isSorting,\n    } = useSortable({id: props.id});\n    \n    const style = {\n        transform: CSS.Transform.toString(transform && { ...transform, scaleY: 1 }),\n        transition: isSorting ? transition : undefined,\n        zIndex: isDragging ? '100' : undefined,\n    };\n\n    \n    useEffect(()=>{\n        setData(props.data);\n        // console.log(props.data);\n\n        const idList = props.data.list.map((menu) => menu.id);\n        setMenuIdList(idList);\n    },[props.data]);\n    \n    \n\n    //2뎁스 메뉴토글버튼 클릭시\n    const li2FolderHandler = (index) => {\n        // 버튼을 클릭하면 해당 인덱스의 li2Classes 상태를 토글합니다.\n        setLi2Classes((prevClasses) => ({\n            ...prevClasses,\n            [index]: !prevClasses[index], // 토글\n        }));\n    };\n\n\n\n    return(\n        <li style={style}\n            ref={setNodeRef}\n            className={props.isLiOn}\n            id={props.id}\n        >\n            <div className=\"menu\">\n                <span>{data && data.name}</span>\n                <div className=\"btn_wrap\">\n                    <button type=\"button\" className=\"btn_add\">하위 카테고리 등록</button>\n                    <button type=\"button\" className=\"btn_folder\" onClick={props.liFolderBtnClickHandler}>하위 카테고리 열고 닫기</button>\n                    <button type=\"button\" className=\"btn_move\" {...attributes} {...listeners}>카테고리 이동</button>\n                </div>\n            </div>\n            <ul className=\"list_menu3\">\n                {data && data.list && data.list.length > 0 ?\n                    data.list.map((depth3,i)=>{\n                        return(\n                            <li key={i}>\n                                <div className=\"menu\">\n                                    <span>{depth3.name}</span>\n                                    <div className=\"btn_wrap\">\n                                        <button type=\"button\" className=\"btn_move\">카테고리 이동</button>\n                                    </div>\n                                </div>\n                            </li>\n                        );\n                    })\n                    : <li className=\"none_category\">카테고리가 없습니다.</li>\n                }\n            </ul>\n        </li>\n    );\n};\n\nexport default MenuDepth2;","/Users/sol/Documents/GitHub/basic_solution_react/src/components/component/admin/Pagination.js",["268"],[],"/Users/sol/Documents/GitHub/basic_solution_react/src/store/etcSlice.js",[],[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":1,"column":25,"nodeType":"273","messageId":"274","endLine":1,"endColumn":31},{"ruleId":"271","severity":1,"message":"275","line":11,"column":11,"nodeType":"273","messageId":"274","endLine":11,"endColumn":15},{"ruleId":"271","severity":1,"message":"276","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":15},{"ruleId":"271","severity":1,"message":"277","line":6,"column":11,"nodeType":"273","messageId":"274","endLine":6,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":53,"column":7,"nodeType":"280","endLine":53,"endColumn":27,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":75,"column":37,"nodeType":"284","endLine":75,"endColumn":96},{"ruleId":"278","severity":1,"message":"285","line":136,"column":7,"nodeType":"280","endLine":136,"endColumn":9,"suggestions":"286"},{"ruleId":"282","severity":1,"message":"283","line":175,"column":25,"nodeType":"284","endLine":175,"endColumn":84},{"ruleId":"282","severity":1,"message":"283","line":213,"column":29,"nodeType":"284","endLine":213,"endColumn":88},{"ruleId":"271","severity":1,"message":"287","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":16},{"ruleId":"271","severity":1,"message":"288","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":16},{"ruleId":"271","severity":1,"message":"289","line":21,"column":11,"nodeType":"273","messageId":"274","endLine":21,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":63,"column":7,"nodeType":"280","endLine":63,"endColumn":18,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":69,"column":23,"nodeType":"293","messageId":"294","endLine":69,"endColumn":25},{"ruleId":"291","severity":1,"message":"292","line":71,"column":29,"nodeType":"293","messageId":"294","endLine":71,"endColumn":31},{"ruleId":"291","severity":1,"message":"292","line":73,"column":29,"nodeType":"293","messageId":"294","endLine":73,"endColumn":31},{"ruleId":"278","severity":1,"message":"295","line":104,"column":7,"nodeType":"280","endLine":104,"endColumn":23,"suggestions":"296"},{"ruleId":"278","severity":1,"message":"297","line":125,"column":7,"nodeType":"280","endLine":125,"endColumn":36,"suggestions":"298"},{"ruleId":"291","severity":1,"message":"292","line":134,"column":19,"nodeType":"293","messageId":"294","endLine":134,"endColumn":21},{"ruleId":"291","severity":1,"message":"292","line":152,"column":33,"nodeType":"293","messageId":"294","endLine":152,"endColumn":35},{"ruleId":"282","severity":1,"message":"283","line":374,"column":25,"nodeType":"284","endLine":374,"endColumn":59},{"ruleId":"271","severity":1,"message":"299","line":29,"column":28,"nodeType":"273","messageId":"274","endLine":29,"endColumn":45},{"ruleId":"278","severity":1,"message":"300","line":60,"column":7,"nodeType":"280","endLine":60,"endColumn":9,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":189,"column":65,"nodeType":"284","endLine":189,"endColumn":106},{"ruleId":"271","severity":1,"message":"304","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":13},{"ruleId":"271","severity":1,"message":"305","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":22},{"ruleId":"271","severity":1,"message":"306","line":5,"column":13,"nodeType":"273","messageId":"274","endLine":5,"endColumn":15},{"ruleId":"271","severity":1,"message":"307","line":6,"column":10,"nodeType":"273","messageId":"274","endLine":6,"endColumn":20},{"ruleId":"271","severity":1,"message":"308","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":16},{"ruleId":"271","severity":1,"message":"309","line":12,"column":11,"nodeType":"273","messageId":"274","endLine":12,"endColumn":19},{"ruleId":"282","severity":1,"message":"283","line":112,"column":41,"nodeType":"284","endLine":112,"endColumn":53},{"ruleId":"282","severity":1,"message":"283","line":131,"column":41,"nodeType":"284","endLine":131,"endColumn":53},{"ruleId":"282","severity":1,"message":"283","line":150,"column":41,"nodeType":"284","endLine":150,"endColumn":53},{"ruleId":"282","severity":1,"message":"283","line":169,"column":41,"nodeType":"284","endLine":169,"endColumn":53},{"ruleId":"282","severity":1,"message":"283","line":188,"column":41,"nodeType":"284","endLine":188,"endColumn":53},{"ruleId":"282","severity":1,"message":"283","line":202,"column":25,"nodeType":"284","endLine":202,"endColumn":59},{"ruleId":"278","severity":1,"message":"310","line":60,"column":7,"nodeType":"280","endLine":60,"endColumn":9,"suggestions":"311"},{"ruleId":"291","severity":1,"message":"292","line":80,"column":15,"nodeType":"293","messageId":"294","endLine":80,"endColumn":17},{"ruleId":"291","severity":1,"message":"292","line":85,"column":15,"nodeType":"293","messageId":"294","endLine":85,"endColumn":17},{"ruleId":"278","severity":1,"message":"312","line":68,"column":7,"nodeType":"280","endLine":68,"endColumn":9,"suggestions":"313"},{"ruleId":"278","severity":1,"message":"314","line":140,"column":8,"nodeType":"280","endLine":140,"endColumn":29,"suggestions":"315"},{"ruleId":"282","severity":1,"message":"283","line":258,"column":25,"nodeType":"284","endLine":258,"endColumn":63},{"ruleId":"278","severity":1,"message":"316","line":64,"column":7,"nodeType":"280","endLine":64,"endColumn":12,"suggestions":"317"},{"ruleId":"291","severity":1,"message":"292","line":136,"column":40,"nodeType":"293","messageId":"294","endLine":136,"endColumn":42},{"ruleId":"291","severity":1,"message":"292","line":137,"column":40,"nodeType":"293","messageId":"294","endLine":137,"endColumn":42},{"ruleId":"291","severity":1,"message":"292","line":138,"column":40,"nodeType":"293","messageId":"294","endLine":138,"endColumn":42},{"ruleId":"291","severity":1,"message":"292","line":159,"column":75,"nodeType":"293","messageId":"294","endLine":159,"endColumn":77},{"ruleId":"291","severity":1,"message":"292","line":162,"column":123,"nodeType":"293","messageId":"294","endLine":162,"endColumn":125},{"ruleId":"291","severity":1,"message":"292","line":15,"column":27,"nodeType":"293","messageId":"294","endLine":15,"endColumn":29},{"ruleId":"271","severity":1,"message":"318","line":25,"column":12,"nodeType":"273","messageId":"274","endLine":25,"endColumn":22},{"ruleId":"271","severity":1,"message":"319","line":25,"column":24,"nodeType":"273","messageId":"274","endLine":25,"endColumn":37},{"ruleId":"271","severity":1,"message":"320","line":27,"column":12,"nodeType":"273","messageId":"274","endLine":27,"endColumn":22},{"ruleId":"271","severity":1,"message":"321","line":28,"column":12,"nodeType":"273","messageId":"274","endLine":28,"endColumn":24},{"ruleId":"271","severity":1,"message":"322","line":28,"column":26,"nodeType":"273","messageId":"274","endLine":28,"endColumn":41},{"ruleId":"271","severity":1,"message":"323","line":30,"column":12,"nodeType":"273","messageId":"274","endLine":30,"endColumn":22},{"ruleId":"271","severity":1,"message":"324","line":32,"column":12,"nodeType":"273","messageId":"274","endLine":32,"endColumn":19},{"ruleId":"271","severity":1,"message":"325","line":33,"column":12,"nodeType":"273","messageId":"274","endLine":33,"endColumn":22},{"ruleId":"271","severity":1,"message":"326","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":19},{"ruleId":"271","severity":1,"message":"327","line":1,"column":21,"nodeType":"273","messageId":"274","endLine":1,"endColumn":29},{"ruleId":"328","severity":1,"message":"329","line":41,"column":67,"nodeType":"330","messageId":"331","endLine":41,"endColumn":69},{"ruleId":"291","severity":1,"message":"292","line":43,"column":43,"nodeType":"293","messageId":"294","endLine":43,"endColumn":45},{"ruleId":"282","severity":1,"message":"283","line":51,"column":53,"nodeType":"284","endLine":51,"endColumn":91},{"ruleId":"291","severity":1,"message":"292","line":60,"column":43,"nodeType":"293","messageId":"294","endLine":60,"endColumn":45},{"ruleId":"291","severity":1,"message":"292","line":75,"column":43,"nodeType":"293","messageId":"294","endLine":75,"endColumn":45},{"ruleId":"291","severity":1,"message":"292","line":102,"column":60,"nodeType":"293","messageId":"294","endLine":102,"endColumn":62},{"ruleId":"282","severity":1,"message":"283","line":106,"column":53,"nodeType":"284","endLine":106,"endColumn":65},{"ruleId":"282","severity":1,"message":"283","line":113,"column":45,"nodeType":"284","endLine":113,"endColumn":57},{"ruleId":"291","severity":1,"message":"292","line":120,"column":87,"nodeType":"293","messageId":"294","endLine":120,"endColumn":89},{"ruleId":"291","severity":1,"message":"292","line":122,"column":66,"nodeType":"293","messageId":"294","endLine":122,"endColumn":68},{"ruleId":"271","severity":1,"message":"332","line":5,"column":5,"nodeType":"273","messageId":"274","endLine":5,"endColumn":15},{"ruleId":"271","severity":1,"message":"333","line":6,"column":5,"nodeType":"273","messageId":"274","endLine":6,"endColumn":18},{"ruleId":"271","severity":1,"message":"334","line":15,"column":5,"nodeType":"273","messageId":"274","endLine":15,"endColumn":14},{"ruleId":"278","severity":1,"message":"335","line":66,"column":7,"nodeType":"280","endLine":66,"endColumn":22,"suggestions":"336"},{"ruleId":"271","severity":1,"message":"337","line":81,"column":11,"nodeType":"273","messageId":"274","endLine":81,"endColumn":18},{"ruleId":"271","severity":1,"message":"338","line":98,"column":11,"nodeType":"273","messageId":"274","endLine":98,"endColumn":26},{"ruleId":"271","severity":1,"message":"339","line":104,"column":11,"nodeType":"273","messageId":"274","endLine":104,"endColumn":24},{"ruleId":"271","severity":1,"message":"340","line":105,"column":16,"nodeType":"273","messageId":"274","endLine":105,"endColumn":22},{"ruleId":"271","severity":1,"message":"341","line":105,"column":24,"nodeType":"273","messageId":"274","endLine":105,"endColumn":28},{"ruleId":"271","severity":1,"message":"342","line":7,"column":24,"nodeType":"273","messageId":"274","endLine":7,"endColumn":37},{"ruleId":"271","severity":1,"message":"343","line":11,"column":9,"nodeType":"273","messageId":"274","endLine":11,"endColumn":19},{"ruleId":"271","severity":1,"message":"344","line":12,"column":9,"nodeType":"273","messageId":"274","endLine":12,"endColumn":18},{"ruleId":"271","severity":1,"message":"345","line":13,"column":9,"nodeType":"273","messageId":"274","endLine":13,"endColumn":19},{"ruleId":"271","severity":1,"message":"332","line":5,"column":5,"nodeType":"273","messageId":"274","endLine":5,"endColumn":15},{"ruleId":"271","severity":1,"message":"333","line":6,"column":5,"nodeType":"273","messageId":"274","endLine":6,"endColumn":18},{"ruleId":"271","severity":1,"message":"346","line":7,"column":5,"nodeType":"273","messageId":"274","endLine":7,"endColumn":19},{"ruleId":"271","severity":1,"message":"347","line":8,"column":5,"nodeType":"273","messageId":"274","endLine":8,"endColumn":18},{"ruleId":"271","severity":1,"message":"348","line":9,"column":5,"nodeType":"273","messageId":"274","endLine":9,"endColumn":16},{"ruleId":"271","severity":1,"message":"349","line":10,"column":5,"nodeType":"273","messageId":"274","endLine":10,"endColumn":14},{"ruleId":"271","severity":1,"message":"350","line":11,"column":5,"nodeType":"273","messageId":"274","endLine":11,"endColumn":15},{"ruleId":"271","severity":1,"message":"334","line":15,"column":5,"nodeType":"273","messageId":"274","endLine":15,"endColumn":14},{"ruleId":"271","severity":1,"message":"351","line":16,"column":5,"nodeType":"273","messageId":"274","endLine":16,"endColumn":20},{"ruleId":"271","severity":1,"message":"352","line":17,"column":5,"nodeType":"273","messageId":"274","endLine":17,"endColumn":32},{"ruleId":"271","severity":1,"message":"353","line":18,"column":5,"nodeType":"273","messageId":"274","endLine":18,"endColumn":32},{"ruleId":"271","severity":1,"message":"318","line":23,"column":12,"nodeType":"273","messageId":"274","endLine":23,"endColumn":22},{"ruleId":"271","severity":1,"message":"323","line":24,"column":12,"nodeType":"273","messageId":"274","endLine":24,"endColumn":22},{"ruleId":"271","severity":1,"message":"354","line":54,"column":11,"nodeType":"273","messageId":"274","endLine":54,"endColumn":27},{"ruleId":"278","severity":1,"message":"355","line":20,"column":7,"nodeType":"280","endLine":20,"endColumn":26,"suggestions":"356"},"no-new-object",["357"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'storage' is defined but never used.","'popup' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'common.boardMenu'. Either include it or remove the dependency array.","ArrayExpression",["358"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getBoardCount', 'getBoardList', 'getConnectorCount', and 'getConnectorList'. Either include them or remove the dependency array.",["359"],"'Formik' is defined but never used.","'pageNo' is defined but never used.","'board_delt' is assigned a value but never used.",["360"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getBoardData'. Either include it or remove the dependency array.",["361"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getBoardData'. Either include them or remove the dependency array.",["362"],"'setUnusedMenuList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'menuList'. Either include it or remove the dependency array.",["363"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'axios' is defined but never used.","'enum_api_uri' is defined but never used.","'CF' is defined but never used.","'confirmPop' is defined but never used.","'InputBox' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'getBoardMenuList'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'boardList'. Either include it or remove the dependency array.",["366"],"React Hook useEffect has a missing dependency: 'getAlarmList'. Either include it or remove the dependency array.",["367"],"'li2Classes' is assigned a value but never used.","'setLi2Classes' is assigned a value but never used.","'unusedMenu' is assigned a value but never used.","'unusedMenuOn' is assigned a value but never used.","'setUnusedMenuOn' is assigned a value but never used.","'menuIdList' is assigned a value but never used.","'assiDnd' is assigned a value but never used.","'assiDndEnd' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'DndContext' is defined but never used.","'closestCenter' is defined but never used.","'arrayMove' is defined but never used.","React Hook useEffect has a missing dependency: 'li2Classes'. Either include it or remove the dependency array.",["368"],"'sensors' is assigned a value but never used.","'handleDragStart' is assigned a value but never used.","'handleDragEnd' is assigned a value but never used.","'active' is assigned a value but never used.","'over' is assigned a value but never used.","'setUnusedMenu' is assigned a value but never used.","'attributes' is assigned a value but never used.","'listeners' is assigned a value but never used.","'setNodeRef' is assigned a value but never used.","'KeyboardSensor' is defined but never used.","'PointerSensor' is defined but never used.","'MouseSensor' is defined but never used.","'useSensor' is defined but never used.","'useSensors' is defined but never used.","'SortableContext' is defined but never used.","'sortableKeyboardCoordinates' is defined but never used.","'verticalListSortingStrategy' is defined but never used.","'li2FolderHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.endPage' and 'props.startPage'. Either include them or remove the dependency array.",["369"],"no-object-constructor",{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [common.boardMenu, common.currentPage]",{"range":"394","text":"395"},"Update the dependencies array to be: [getBoardCount, getBoardList, getConnectorCount, getConnectorList]",{"range":"396","text":"397"},"Update the dependencies array to be: [common.boardMenu, props.tit]",{"range":"398","text":"399"},"Update the dependencies array to be: [category, getBoardData, limit]",{"range":"400","text":"401"},"Update the dependencies array to be: [dispatch, etc.pageNo, etc.pageNoChange, getBoardData]",{"range":"402","text":"403"},"Update the dependencies array to be: [menuList]",{"range":"404","text":"405"},"Update the dependencies array to be: [getInfo]",{"range":"406","text":"407"},"Update the dependencies array to be: [getBoardMenuList]",{"range":"408","text":"409"},"Update the dependencies array to be: [menuOn, boardHeight, boardList]",{"range":"410","text":"411"},"Update the dependencies array to be: [getAlarmList, tab]",{"range":"412","text":"413"},"Update the dependencies array to be: [li2Classes, props.liOnIdx]",{"range":"414","text":"415"},"Update the dependencies array to be: [props.currentPage, props.endPage, props.startPage]",{"range":"416","text":"417"},[1741,1761],"[common.boardMenu, common.currentPage]",[4136,4138],"[getBoardCount, getBoardList, getConnectorCount, getConnectorList]",[2509,2520],"[common.boardMenu, props.tit]",[3725,3741],"[category, getBoardData, limit]",[4219,4248],"[dispatch, etc.pageNo, etc.pageNoChange, getBoardData]",[1745,1747],"[menuList]",[1873,1875],"[getInfo]",[2127,2129],"[getBoardMenuList]",[4754,4775],"[menuOn, boardHeight, boardList]",[1888,1893],"[getAlarmList, tab]",[1675,1690],"[li2Classes, props.liOnIdx]",[541,560],"[props.currentPage, props.endPage, props.startPage]"]